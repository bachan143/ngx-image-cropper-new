import { Point } from './point';
export class PointPool {
    constructor(initialSize=1) {
        var prev = (this.firstAvailable = new Point());
        for (var i = 1; i < initialSize; i++) {
            var p = new Point();
            prev.next = p;
            prev = p;
        }
    }
        get instance() {
            return PointPool._instance;
        }
    borrow (x, y) {
        if (this.firstAvailable == null) {
            throw "Pool exhausted";
        }
        this.borrowed++;
        var p = this.firstAvailable;
        this.firstAvailable = p.next;
        p.x = x;
        p.y = y;
        return p;
    };
    returnPoint(p) {
        this.borrowed--;
        p.x = 0;
        p.y = 0;
        p.next = this.firstAvailable;
        this.firstAvailable = p;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9pbnRQb29sLmpzIiwic291cmNlUm9vdCI6IkM6L3dvcmtzcGFjZS9uZ3gtaW1nLWNyb3BwZXIvcHJvamVjdHMvbmd4LWltZy1jcm9wcGVyL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9pbWFnZS1jcm9wcGVyL21vZGVsL3BvaW50UG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRWhDLE1BQU0sT0FBTyxTQUFTO0lBSXBCLFlBQVksY0FBc0IsQ0FBQztRQUNqQyxJQUFJLElBQUksR0FBVSxDQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBRXRELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDcEMsTUFBTSxDQUFDLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztZQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztZQUNkLElBQUksR0FBRyxDQUFDLENBQUM7U0FDVjtJQUNILENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxNQUFNLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDaEMsSUFBSSxJQUFJLENBQUMsY0FBYyxJQUFJLElBQUksRUFBRTtZQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7U0FDbkM7UUFDRCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsTUFBTSxDQUFDLEdBQVUsSUFBSSxDQUFDLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDUixDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNSLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVNLFdBQVcsQ0FBQyxDQUFRO1FBQ3pCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNSLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1IsQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQzdCLElBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi9wb2ludCc7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9pbnRQb29sIHtcclxuICBwcml2YXRlIGJvcnJvd2VkOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBmaXJzdEF2YWlsYWJsZTogUG9pbnQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGluaXRpYWxTaXplOiBudW1iZXIgPSAxKSB7XHJcbiAgICBsZXQgcHJldjogUG9pbnQgPSAodGhpcy5maXJzdEF2YWlsYWJsZSA9IG5ldyBQb2ludCgpKTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IGluaXRpYWxTaXplOyBpKyspIHtcclxuICAgICAgY29uc3QgcCA9IG5ldyBQb2ludCgpO1xyXG4gICAgICBwcmV2Lm5leHQgPSBwO1xyXG4gICAgICBwcmV2ID0gcDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBpbnN0YW5jZSgpOiBQb2ludFBvb2wge1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYm9ycm93KHg6IG51bWJlciwgeTogbnVtYmVyKTogUG9pbnQge1xyXG4gICAgaWYgKHRoaXMuZmlyc3RBdmFpbGFibGUgPT0gbnVsbCkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Bvb2wgZXhoYXVzdGVkJyk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmJvcnJvd2VkKys7XHJcbiAgICBjb25zdCBwOiBQb2ludCA9IHRoaXMuZmlyc3RBdmFpbGFibGU7XHJcbiAgICB0aGlzLmZpcnN0QXZhaWxhYmxlID0gcC5uZXh0O1xyXG4gICAgcC54ID0geDtcclxuICAgIHAueSA9IHk7XHJcbiAgICByZXR1cm4gcDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZXR1cm5Qb2ludChwOiBQb2ludCkge1xyXG4gICAgdGhpcy5ib3Jyb3dlZC0tO1xyXG4gICAgcC54ID0gMDtcclxuICAgIHAueSA9IDA7XHJcbiAgICBwLm5leHQgPSB0aGlzLmZpcnN0QXZhaWxhYmxlO1xyXG4gICAgdGhpcy5maXJzdEF2YWlsYWJsZSA9IHA7XHJcbiAgfVxyXG59XHJcbiJdfQ==