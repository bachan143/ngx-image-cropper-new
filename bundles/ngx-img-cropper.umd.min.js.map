{"version":3,"sources":["../../../projects/ngx-img-cropper/src/lib/image-cropper/cropper-draw-settings.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/cropper-settings.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-img-cropper/src/lib/image-cropper/exif.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/point.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/pointPool.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/bounds.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/handle.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/cornerMarker.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/cropTouch.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/dragMarker.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/imageCropperModel.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/imageCropperDataShare.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/imageCropper.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/cropPosition.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/image-cropper.component.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/image-cropper.module.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/image-cropper.service.ts","../../../projects/ngx-img-cropper/src/lib/image-cropper/model/cropService.ts"],"names":["settings","this","lineDash","strokeWidth","strokeColor","fillColor","dragIconStrokeWidth","dragIconStrokeColor","dragIconFillColor","backgroundFillColor","CropperSettings","canvasWidth","canvasHeight","dynamicSizing","width","height","minWidth","minHeight","minWithRelativeToResolution","croppedWidth","croppedHeight","cropperDrawSettings","CropperDrawSettings","touchRadius","noFileInput","markerSizeMultiplier","centerTouchRadius","showCenterMarker","allowedFilesRegex","cropOnResize","preserveSize","compressRatio","_rounded","_keepAspect","Object","assign","defineProperty","prototype","val","console","error","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","Fraction","_super","Number","Exif","debug","IptcFieldMap","120","110","25","55","80","85","122","105","116","15","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","16","17","18","19","20","21","22","23","24","26","27","28","29","30","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","addEvent","element","event","handler","addEventListener","attachEvent","imageHasData","img","exifdata","base64ToArrayBuffer","base64","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","charCodeAt","objectURLToBlob","url","callback","http","XMLHttpRequest","open","responseType","onload","status","response","send","getImageData","_this","handleBinaryFile","binFile","data","findEXIFinJPEG","iptcdata","findIPTCinJPEG","src","test","arrayBuffer","fileReader_1","FileReader","e","target","result","blob","readAsArrayBuffer","http_1","Error","Blob","File","fileReader","log","byteLength","file","dataView","DataView","getUint8","marker","offset","readEXIFData","getUint16","_dataView","_offset","nameHeaderLength","startOffset","sectionLength","readIPTCData","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","getStringFromDB","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","n","numerator","denominator","type","numValues","getUint32","valueOffset","getInt32","start","outstr","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","checkImageType","Image","HTMLImageElement","getData","complete","getTag","getAllTags","a","pretty","strPretty","readFromBinaryFile","args","_i","arguments","Point","x","y","myNext","myPrev","PointPool","initialSize","prev","firstAvailable","borrow","borrowed","returnPoint","Bounds","left","right","top","bottom","getCentre","w","h","instance","Handle","radius","cropperSettings","over","drag","_position","setDrag","setOver","draw","ctx","touchInBounds","position","setPosition","CornerMarker","drawCornerBorder","sideLength","hDirection","vDirection","horizontalNeighbour","verticalNeighbour","beginPath","setLineDash","lineJoin","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","drawCornerFill","rounded","offX","Math","round","sin","PI","abs","offY","fillStyle","fill","moveX","moveY","move","addHorizontalNeighbour","neighbour","addVerticalNeighbour","getHorizontalNeighbour","getVerticalNeighbour","id","DragMarker","iconPoints","scaledIconPoints","getDragIconPoints","drawIcon","arr","scale","maxLength","arrowWidth","arrowLength","connectorThroat","points","points_1","points_1_1","recalculatePosition","bounds","c","ImageCropperDataShare","share","setPressed","canvas","pressed","setReleased","setStyle","style","undefined","ImageCropper","imageCropperDataShare","keepAspect","crop","aspectRatio","currentDragTouches","isMouseDown","ratioW","ratioH","fileType","imageSet","pointPool","tl","tr","bl","br","markers","center","croppedImage","currentlyInteracting","cropWidth","cropHeight","sign","NaN","getMousePos","evt","rect","getBoundingClientRect","clientX","clientY","getTouchPos","touch","detectVerticalSquash","ih","document","createElement","getContext","drawImage","imageData","sy","ey","py","ratio","getDataUriMimeType","dataUri","dataUriSubstring","substring","mimeType","matches","RegExp","exec","prepare","cropCanvas","responsiveWidth","parentElement","clientWidth","updateSettings","resizeCanvas","setImage","srcImage","reset","getBounds","clearRect","sourceAspect","canvasAspect","drawImageIOSFix","fillRect","save","arc","clip","restore","max","strokeRect","dragCenter","maxXClamp","minXClamp","minYClamp","maxYClamp","enforceMinSize","xLength","yLength","xOver","yOver","dragCorner","anchorMarker","iX","iY","ax","ay","newHeight","newWidth","newY","newX","fold","getSide","min","handleRelease","newCropTouch","index","k","dragHandle","splice","handleMove","matched","dragTouch","clampedPositions","clampPosition","_b","_c","updateClampBounds","getCropBounds","isImageSet","cropPosition","getCropPositionFromMarkers","setCropPosition","updateCropPosition","cropBounds","getCropPositionFromBounds","cropPosition_1","cropPosition_1_1","vertSquashRatio","getCroppedImageHelper","tlPos","trPos","blPos","brPos","cropAspect","cX","cY","imageH","cropW","imageW","cropH","marginTop","marginLeft","actualH","actualW","actualX","actualY","scaledW","scaledH","fillWidth","fillHeight","getCroppedImage","offsetH","offsetW","resampleFn","toDataURL","minX","MAX_VALUE","minY","maxX","maxY","setBounds","currentBounds","onTouchMove","touches","preventDefault","touchPosition","cropTouch","CropTouch","identifier","distance","previousDistance","onMouseMove","mousePosition","getDragTouchForID","drawCursors","cursorDrawn","drawCornerCursor","didDraw","onTouchStart","onTouchEnd","changedTouches","sx","sw","sh","dx","dy","dw","dh","onMouseDown","onMouseUp","ImageCropperModel","CropPosition","toBounds","isInitialized","ImageCropperComponent","renderer","cropPositionChange","EventEmitter","exif","onCrop","dragUnsubscribers","ngAfterViewInit","cropcanvas","nativeElement","cropperClass","setAttribute","windowListener","resize","bind","window","toString","cropper","ngOnChanges","changes","isCropPositionChanged","image","emit","updateCropBounds","inputImage","currentValue","ngOnDestroy","removeDragListeners","removeEventListener","listen","forEach","unsubscribe","fileChangeListener","$event","files","name","image_1","loadEvent","readAsDataURL","offsetWidth","offsetHeight","newBounds","croppingClass","raf","requestAnimationFrame","cancelAnimationFrame","naturalHeight","naturalWidth","getOrientedImage","original","isCropPositionUpdateNeeded","cropBound","orientation","indexOf","cw","ch","cx","cy","deg","rotate","Component","selector","template","Renderer2","Inject","DOCUMENT","ViewChild","static","Input","Output","NgModule","declarations","exports","imports","CommonModule","Injectable","providedIn","CropService","init"],"mappings":"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","sourcesContent":["export class CropperDrawSettings {\r\n  public lineDash = false;\r\n  public strokeWidth = 1;\r\n  public strokeColor = 'rgba(255,255,255,1)';\r\n  public fillColor = 'rgba(255,255,255,1)';\r\n  public dragIconStrokeWidth = 1;\r\n  public dragIconStrokeColor = 'rgba(0,0,0,1)';\r\n  public dragIconFillColor = 'rgba(255,255,255,1)';\r\n  public backgroundFillColor = 'rgba(0,0,0,0.6)';\r\n\r\n  constructor(settings?: any) {\r\n    if (typeof settings === 'object') {\r\n      this.lineDash = settings.lineDash || this.lineDash;\r\n      this.strokeWidth = settings.strokeWidth || this.strokeWidth;\r\n      this.fillColor = settings.fillColor || this.fillColor;\r\n      this.strokeColor = settings.strokeColor || this.strokeColor;\r\n      this.dragIconStrokeWidth =\r\n        settings.dragIconStrokeWidth || this.dragIconStrokeWidth;\r\n      this.dragIconStrokeColor =\r\n        settings.dragIconStrokeColor || this.dragIconStrokeColor;\r\n      this.dragIconFillColor =\r\n        settings.dragIconFillColor || this.dragIconFillColor;\r\n      this.backgroundFillColor =\r\n        settings.backgroundFillColor || this.backgroundFillColor;\r\n    }\r\n  }\r\n}\r\n","import { CropperDrawSettings } from './cropper-draw-settings';\r\n\r\nexport interface ICropperSettings {\r\n  canvasWidth?: number;\r\n  canvasHeight?: number;\r\n  dynamicSizing?: boolean;\r\n  cropperClass?: string;\r\n  croppingClass?: string;\r\n  width?: number;\r\n  height?: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n  minWithRelativeToResolution?: boolean;\r\n  croppedWidth?: number;\r\n  croppedHeight?: number;\r\n  cropperDrawSettings?: any;\r\n  touchRadius?: number;\r\n  noFileInput?: boolean;\r\n  fileType?: string;\r\n  resampleFn?: (c: HTMLCanvasElement) => void;\r\n  markerSizeMultiplier?: number;\r\n  centerTouchRadius?: number;\r\n  showCenterMarker?: boolean;\r\n  allowedFilesRegex?: RegExp;\r\n  cropOnResize?: boolean;\r\n  preserveSize?: boolean;\r\n  compressRatio?: number;\r\n  rounded?: boolean;\r\n  keepAspect?: boolean;\r\n}\r\n\r\nexport class CropperSettings implements ICropperSettings {\r\n  public canvasWidth = 300;\r\n  public canvasHeight = 300;\r\n\r\n  public dynamicSizing = false;\r\n  public cropperClass: string;\r\n  public croppingClass: string;\r\n\r\n  public width = 200;\r\n  public height = 200;\r\n\r\n  public minWidth = 50;\r\n  public minHeight = 50;\r\n  public minWithRelativeToResolution = true;\r\n\r\n  public croppedWidth = 100;\r\n  public croppedHeight = 100;\r\n\r\n  public cropperDrawSettings: CropperDrawSettings = new CropperDrawSettings();\r\n  public touchRadius = 20;\r\n  public noFileInput = false;\r\n\r\n  public fileType: string;\r\n\r\n  public resampleFn: (c: HTMLCanvasElement) => void;\r\n\r\n  public markerSizeMultiplier = 1;\r\n  public centerTouchRadius = 20;\r\n  public showCenterMarker = true;\r\n\r\n  public allowedFilesRegex: RegExp = /\\.(jpe?g|png|gif|bmp)$/i;\r\n  public cropOnResize = true;\r\n  public preserveSize = false;\r\n\r\n  public compressRatio = 1.0;\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _rounded = false;\r\n  // tslint:disable-next-line:variable-name\r\n  private _keepAspect = true;\r\n\r\n  constructor(settings?: ICropperSettings) {\r\n    if (typeof settings === 'object') {\r\n      Object.assign(this, settings);\r\n    }\r\n  }\r\n\r\n  set rounded(val: boolean) {\r\n    this._rounded = val;\r\n    if (val) {\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get rounded(): boolean {\r\n    return this._rounded;\r\n  }\r\n\r\n  set keepAspect(val: boolean) {\r\n    this._keepAspect = val;\r\n    if (this._rounded === true && this._keepAspect === false) {\r\n      console.error(\r\n        'Cannot set keep aspect to false on rounded cropper. Ellipsis not supported'\r\n      );\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get keepAspect(): boolean {\r\n    return this._keepAspect;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export class Fraction extends Number {\r\n  numerator: number;\r\n  denominator: number;\r\n}\r\n\r\nexport interface IImageExtended extends HTMLImageElement {\r\n  exifdata: any;\r\n  iptcdata: any;\r\n}\r\n\r\nexport class Exif {\r\n  public debug = false;\r\n\r\n  public IptcFieldMap: any = {\r\n    0x78: 'caption',\r\n    0x6e: 'credit',\r\n    0x19: 'keywords',\r\n    0x37: 'dateCreated',\r\n    0x50: 'byline',\r\n    0x55: 'bylineTitle',\r\n    0x7a: 'captionWriter',\r\n    0x69: 'headline',\r\n    0x74: 'copyright',\r\n    0x0f: 'category'\r\n  };\r\n\r\n  public Tags: any = {\r\n    // version tags\r\n    0x9000: 'ExifVersion', // EXIF version\r\n    0xa000: 'FlashpixVersion', // Flashpix format version\r\n\r\n    // colorspace tags\r\n    0xa001: 'ColorSpace', // Color space information tag\r\n\r\n    // image configuration\r\n    0xa002: 'PixelXDimension', // Valid width of meaningful image\r\n    0xa003: 'PixelYDimension', // Valid height of meaningful image\r\n    0x9101: 'ComponentsConfiguration', // Information about channels\r\n    0x9102: 'CompressedBitsPerPixel', // Compressed bits per pixel\r\n\r\n    // user information\r\n    0x927c: 'MakerNote', // Any desired information written by the manufacturer\r\n    0x9286: 'UserComment', // Comments by user\r\n\r\n    // related file\r\n    0xa004: 'RelatedSoundFile', // Name of related sound file\r\n\r\n    // date and time\r\n    0x9003: 'DateTimeOriginal', // Date and time when the original image was generated\r\n    0x9004: 'DateTimeDigitized', // Date and time when the image was stored digitally\r\n    0x9290: 'SubsecTime', // Fractions of seconds for DateTime\r\n    0x9291: 'SubsecTimeOriginal', // Fractions of seconds for DateTimeOriginal\r\n    0x9292: 'SubsecTimeDigitized', // Fractions of seconds for DateTimeDigitized\r\n\r\n    // picture-taking conditions\r\n    0x829a: 'ExposureTime', // Exposure time (in seconds)\r\n    0x829d: 'FNumber', // F number\r\n    0x8822: 'ExposureProgram', // Exposure program\r\n    0x8824: 'SpectralSensitivity', // Spectral sensitivity\r\n    0x8827: 'ISOSpeedRatings', // ISO speed rating\r\n    0x8828: 'OECF', // Optoelectric conversion factor\r\n    0x9201: 'ShutterSpeedValue', // Shutter speed\r\n    0x9202: 'ApertureValue', // Lens aperture\r\n    0x9203: 'BrightnessValue', // Value of brightness\r\n    0x9204: 'ExposureBias', // Exposure bias\r\n    0x9205: 'MaxApertureValue', // Smallest F number of lens\r\n    0x9206: 'SubjectDistance', // Distance to subject in meters\r\n    0x9207: 'MeteringMode', // Metering mode\r\n    0x9208: 'LightSource', // Kind of light source\r\n    0x9209: 'Flash', // Flash status\r\n    0x9214: 'SubjectArea', // Location and area of main subject\r\n    0x920a: 'FocalLength', // Focal length of the lens in mm\r\n    0xa20b: 'FlashEnergy', // Strobe energy in BCPS\r\n    0xa20c: 'SpatialFrequencyResponse', //\r\n    0xa20e: 'FocalPlaneXResolution', // Number of pixels in width direction per FocalPlaneResolutionUnit\r\n    0xa20f: 'FocalPlaneYResolution', // Number of pixels in height direction per FocalPlaneResolutionUnit\r\n    0xa210: 'FocalPlaneResolutionUnit', // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\r\n    0xa214: 'SubjectLocation', // Location of subject in image\r\n    0xa215: 'ExposureIndex', // Exposure index selected on camera\r\n    0xa217: 'SensingMethod', // Image sensor type\r\n    0xa300: 'FileSource', // Image source (3 == DSC)\r\n    0xa301: 'SceneType', // Scene type (1 == directly photographed)\r\n    0xa302: 'CFAPattern', // Color filter array geometric pattern\r\n    0xa401: 'CustomRendered', // Special processing\r\n    0xa402: 'ExposureMode', // Exposure mode\r\n    0xa403: 'WhiteBalance', // 1 = auto white balance, 2 = manual\r\n    0xa404: 'DigitalZoomRation', // Digital zoom ratio\r\n    0xa405: 'FocalLengthIn35mmFilm', // Equivalent foacl length assuming 35mm film camera (in mm)\r\n    0xa406: 'SceneCaptureType', // Type of scene\r\n    0xa407: 'GainControl', // Degree of overall image gain adjustment\r\n    0xa408: 'Contrast', // Direction of contrast processing applied by camera\r\n    0xa409: 'Saturation', // Direction of saturation processing applied by camera\r\n    0xa40a: 'Sharpness', // Direction of sharpness processing applied by camera\r\n    0xa40b: 'DeviceSettingDescription', //\r\n    0xa40c: 'SubjectDistanceRange', // Distance to subject\r\n\r\n    // other tags\r\n    0xa005: 'InteroperabilityIFDPointer',\r\n    0xa420: 'ImageUniqueID' // Identifier assigned uniquely to each image\r\n  };\r\n\r\n  public TiffTags: any = {\r\n    0x0100: 'ImageWidth',\r\n    0x0101: 'ImageHeight',\r\n    0x8769: 'ExifIFDPointer',\r\n    0x8825: 'GPSInfoIFDPointer',\r\n    0xa005: 'InteroperabilityIFDPointer',\r\n    0x0102: 'BitsPerSample',\r\n    0x0103: 'Compression',\r\n    0x0106: 'PhotometricInterpretation',\r\n    0x0112: 'Orientation',\r\n    0x0115: 'SamplesPerPixel',\r\n    0x011c: 'PlanarConfiguration',\r\n    0x0212: 'YCbCrSubSampling',\r\n    0x0213: 'YCbCrPositioning',\r\n    0x011a: 'XResolution',\r\n    0x011b: 'YResolution',\r\n    0x0128: 'ResolutionUnit',\r\n    0x0111: 'StripOffsets',\r\n    0x0116: 'RowsPerStrip',\r\n    0x0117: 'StripByteCounts',\r\n    0x0201: 'JPEGInterchangeFormat',\r\n    0x0202: 'JPEGInterchangeFormatLength',\r\n    0x012d: 'TransferFunction',\r\n    0x013e: 'WhitePoint',\r\n    0x013f: 'PrimaryChromaticities',\r\n    0x0211: 'YCbCrCoefficients',\r\n    0x0214: 'ReferenceBlackWhite',\r\n    0x0132: 'DateTime',\r\n    0x010e: 'ImageDescription',\r\n    0x010f: 'Make',\r\n    0x0110: 'Model',\r\n    0x0131: 'Software',\r\n    0x013b: 'Artist',\r\n    0x8298: 'Copyright'\r\n  };\r\n\r\n  public GPSTags: any = {\r\n    0x0000: 'GPSVersionID',\r\n    0x0001: 'GPSLatitudeRef',\r\n    0x0002: 'GPSLatitude',\r\n    0x0003: 'GPSLongitudeRef',\r\n    0x0004: 'GPSLongitude',\r\n    0x0005: 'GPSAltitudeRef',\r\n    0x0006: 'GPSAltitude',\r\n    0x0007: 'GPSTimeStamp',\r\n    0x0008: 'GPSSatellites',\r\n    0x0009: 'GPSStatus',\r\n    0x000a: 'GPSMeasureMode',\r\n    0x000b: 'GPSDOP',\r\n    0x000c: 'GPSSpeedRef',\r\n    0x000d: 'GPSSpeed',\r\n    0x000e: 'GPSTrackRef',\r\n    0x000f: 'GPSTrack',\r\n    0x0010: 'GPSImgDirectionRef',\r\n    0x0011: 'GPSImgDirection',\r\n    0x0012: 'GPSMapDatum',\r\n    0x0013: 'GPSDestLatitudeRef',\r\n    0x0014: 'GPSDestLatitude',\r\n    0x0015: 'GPSDestLongitudeRef',\r\n    0x0016: 'GPSDestLongitude',\r\n    0x0017: 'GPSDestBearingRef',\r\n    0x0018: 'GPSDestBearing',\r\n    0x0019: 'GPSDestDistanceRef',\r\n    0x001a: 'GPSDestDistance',\r\n    0x001b: 'GPSProcessingMethod',\r\n    0x001c: 'GPSAreaInformation',\r\n    0x001d: 'GPSDateStamp',\r\n    0x001e: 'GPSDifferential'\r\n  };\r\n\r\n  public StringValues: any = {\r\n    ExposureProgram: {\r\n      0: 'Not defined',\r\n      1: 'Manual',\r\n      2: 'Normal program',\r\n      3: 'Aperture priority',\r\n      4: 'Shutter priority',\r\n      5: 'Creative program',\r\n      6: 'Action program',\r\n      7: 'Portrait mode',\r\n      8: 'Landscape mode'\r\n    },\r\n    MeteringMode: {\r\n      0: 'Unknown',\r\n      1: 'Average',\r\n      2: 'CenterWeightedAverage',\r\n      3: 'Spot',\r\n      4: 'MultiSpot',\r\n      5: 'Pattern',\r\n      6: 'Partial',\r\n      255: 'Other'\r\n    },\r\n    LightSource: {\r\n      0: 'Unknown',\r\n      1: 'Daylight',\r\n      2: 'Fluorescent',\r\n      3: 'Tungsten (incandescent light)',\r\n      4: 'Flash',\r\n      9: 'Fine weather',\r\n      10: 'Cloudy weather',\r\n      11: 'Shade',\r\n      12: 'Daylight fluorescent (D 5700 - 7100K)',\r\n      13: 'Day white fluorescent (N 4600 - 5400K)',\r\n      14: 'Cool white fluorescent (W 3900 - 4500K)',\r\n      15: 'White fluorescent (WW 3200 - 3700K)',\r\n      17: 'Standard light A',\r\n      18: 'Standard light B',\r\n      19: 'Standard light C',\r\n      20: 'D55',\r\n      21: 'D65',\r\n      22: 'D75',\r\n      23: 'D50',\r\n      24: 'ISO studio tungsten',\r\n      255: 'Other'\r\n    },\r\n    Flash: {\r\n      0x0000: 'Flash did not fire',\r\n      0x0001: 'Flash fired',\r\n      0x0005: 'Strobe return light not detected',\r\n      0x0007: 'Strobe return light detected',\r\n      0x0009: 'Flash fired, compulsory flash mode',\r\n      0x000d: 'Flash fired, compulsory flash mode, return light not detected',\r\n      0x000f: 'Flash fired, compulsory flash mode, return light detected',\r\n      0x0010: 'Flash did not fire, compulsory flash mode',\r\n      0x0018: 'Flash did not fire, auto mode',\r\n      0x0019: 'Flash fired, auto mode',\r\n      0x001d: 'Flash fired, auto mode, return light not detected',\r\n      0x001f: 'Flash fired, auto mode, return light detected',\r\n      0x0020: 'No flash function',\r\n      0x0041: 'Flash fired, red-eye reduction mode',\r\n      0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\r\n      0x0047: 'Flash fired, red-eye reduction mode, return light detected',\r\n      0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\r\n      0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\r\n      0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\r\n      0x0059: 'Flash fired, auto mode, red-eye reduction mode',\r\n      0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\r\n      0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\r\n    },\r\n    SensingMethod: {\r\n      1: 'Not defined',\r\n      2: 'One-chip color area sensor',\r\n      3: 'Two-chip color area sensor',\r\n      4: 'Three-chip color area sensor',\r\n      5: 'Color sequential area sensor',\r\n      7: 'Trilinear sensor',\r\n      8: 'Color sequential linear sensor'\r\n    },\r\n    SceneCaptureType: {\r\n      0: 'Standard',\r\n      1: 'Landscape',\r\n      2: 'Portrait',\r\n      3: 'Night scene'\r\n    },\r\n    SceneType: {\r\n      1: 'Directly photographed'\r\n    },\r\n    CustomRendered: {\r\n      0: 'Normal process',\r\n      1: 'Custom process'\r\n    },\r\n    WhiteBalance: {\r\n      0: 'Auto white balance',\r\n      1: 'Manual white balance'\r\n    },\r\n    GainControl: {\r\n      0: 'None',\r\n      1: 'Low gain up',\r\n      2: 'High gain up',\r\n      3: 'Low gain down',\r\n      4: 'High gain down'\r\n    },\r\n    Contrast: {\r\n      0: 'Normal',\r\n      1: 'Soft',\r\n      2: 'Hard'\r\n    },\r\n    Saturation: {\r\n      0: 'Normal',\r\n      1: 'Low saturation',\r\n      2: 'High saturation'\r\n    },\r\n    Sharpness: {\r\n      0: 'Normal',\r\n      1: 'Soft',\r\n      2: 'Hard'\r\n    },\r\n    SubjectDistanceRange: {\r\n      0: 'Unknown',\r\n      1: 'Macro',\r\n      2: 'Close view',\r\n      3: 'Distant view'\r\n    },\r\n    FileSource: {\r\n      3: 'DSC'\r\n    },\r\n\r\n    Components: {\r\n      0: '',\r\n      1: 'Y',\r\n      2: 'Cb',\r\n      3: 'Cr',\r\n      4: 'R',\r\n      5: 'G',\r\n      6: 'B'\r\n    }\r\n  };\r\n\r\n  public addEvent(\r\n    element: EventTarget | any,\r\n    event: string,\r\n    handler: EventListener\r\n  ) {\r\n    if (element.addEventListener) {\r\n      element.addEventListener(event, handler, false);\r\n    } else {\r\n      // Hello, IE!\r\n      if (element.attachEvent) {\r\n        element.attachEvent('on' + event, handler);\r\n      }\r\n    }\r\n  }\r\n\r\n  public imageHasData(img: IImageExtended) {\r\n    return !!img.exifdata;\r\n  }\r\n\r\n  public base64ToArrayBuffer(base64: string): ArrayBuffer {\r\n    base64 = base64.replace(/^data:([^;]+);base64,/gim, '');\r\n    const binary: string = atob(base64);\r\n    const len: number = binary.length;\r\n    const buffer: ArrayBuffer = new ArrayBuffer(len);\r\n    const view: Uint8Array = new Uint8Array(buffer);\r\n    for (let i = 0; i < len; i++) {\r\n      view[i] = binary.charCodeAt(i);\r\n    }\r\n    return buffer;\r\n  }\r\n\r\n  public objectURLToBlob(url: string, callback: (blob: Blob) => void) {\r\n    const http: XMLHttpRequest = new XMLHttpRequest();\r\n    http.open('GET', url, true);\r\n    http.responseType = 'blob';\r\n    http.onload = () => {\r\n      if (http.status === 200 || http.status === 0) {\r\n        callback(http.response);\r\n      }\r\n    };\r\n    http.send();\r\n  }\r\n\r\n  public getImageData(\r\n    img: IImageExtended | Blob | File,\r\n    callback: (img: IImageExtended) => void\r\n  ) {\r\n    const handleBinaryFile = (binFile: ArrayBuffer) => {\r\n      const data = this.findEXIFinJPEG(binFile);\r\n      const iptcdata = this.findIPTCinJPEG(binFile);\r\n      (img as IImageExtended).exifdata = data || {};\r\n      (img as IImageExtended).iptcdata = iptcdata || {};\r\n      if (callback) {\r\n        callback.call(img);\r\n      }\r\n    };\r\n\r\n    if ('src' in img && (img as IImageExtended).src) {\r\n      if (/^data:/i.test((img as IImageExtended).src)) {\r\n        // Data URI\r\n        const arrayBuffer = this.base64ToArrayBuffer(\r\n          (img as IImageExtended).src\r\n        );\r\n        handleBinaryFile(arrayBuffer);\r\n      } else {\r\n        if (/^blob:/i.test((img as IImageExtended).src)) {\r\n          // Object URL\r\n          const fileReader = new FileReader();\r\n          fileReader.onload = (e: any) => {\r\n            handleBinaryFile(e.target.result);\r\n          };\r\n          this.objectURLToBlob((img as IImageExtended).src, (blob: Blob) => {\r\n            fileReader.readAsArrayBuffer(blob);\r\n          });\r\n        } else {\r\n          const http = new XMLHttpRequest();\r\n          http.onload = () => {\r\n            if (http.status === 200 || http.status === 0) {\r\n              handleBinaryFile(http.response);\r\n            } else {\r\n              throw new Error('Could not load image');\r\n            }\r\n          };\r\n          http.open('GET', (img as IImageExtended).src, true);\r\n          http.responseType = 'arraybuffer';\r\n          http.send(null);\r\n        }\r\n      }\r\n    } else {\r\n      if (FileReader && (img instanceof Blob || img instanceof File)) {\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (e: any) => {\r\n          this.log('Got file of length ' + e.target.result.byteLength);\r\n          handleBinaryFile(e.target.result);\r\n        };\r\n\r\n        fileReader.readAsArrayBuffer(img);\r\n      }\r\n    }\r\n  }\r\n\r\n  public findEXIFinJPEG(file: ArrayBuffer) {\r\n    const dataView = new DataView(file);\r\n\r\n    this.log('Got file of length ' + file.byteLength);\r\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n      this.log('Not a valid JPEG');\r\n      return false; // not a valid jpeg\r\n    }\r\n\r\n    let offset = 2;\r\n    const length: number = file.byteLength;\r\n    let marker: number;\r\n\r\n    while (offset < length) {\r\n      if (dataView.getUint8(offset) !== 0xff) {\r\n        this.log(\r\n          'Not a valid marker at offset ' +\r\n            offset +\r\n            ', found: ' +\r\n            dataView.getUint8(offset)\r\n        );\r\n        return false; // not a valid marker, something is wrong\r\n      }\r\n\r\n      marker = dataView.getUint8(offset + 1);\r\n      this.log(marker);\r\n\r\n      // we could implement handling for other markers here,\r\n      // but we're only looking for 0xFFE1 for EXIF data\r\n      if (marker === 225) {\r\n        this.log('Found 0xFFE1 marker');\r\n        return this.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\r\n        // offset += 2 + file.getShortAt(offset+2, true);\r\n      } else {\r\n        offset += 2 + dataView.getUint16(offset + 2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public findIPTCinJPEG(file: ArrayBuffer) {\r\n    const dataView = new DataView(file);\r\n\r\n    this.log('Got file of length ' + file.byteLength);\r\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n      this.log('Not a valid JPEG');\r\n      return false; // not a valid jpeg\r\n    }\r\n\r\n    let offset = 2;\r\n    const length = file.byteLength;\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    const isFieldSegmentStart = (_dataView: DataView, _offset: number) => {\r\n      return (\r\n        _dataView.getUint8(_offset) === 0x38 &&\r\n        _dataView.getUint8(_offset + 1) === 0x42 &&\r\n        _dataView.getUint8(_offset + 2) === 0x49 &&\r\n        _dataView.getUint8(_offset + 3) === 0x4d &&\r\n        _dataView.getUint8(_offset + 4) === 0x04 &&\r\n        _dataView.getUint8(_offset + 5) === 0x04\r\n      );\r\n    };\r\n\r\n    while (offset < length) {\r\n      if (isFieldSegmentStart(dataView, offset)) {\r\n        // Get the length of the name header (which is padded to an even number of bytes)\r\n        let nameHeaderLength = dataView.getUint8(offset + 7);\r\n        if (nameHeaderLength % 2 !== 0) {\r\n          nameHeaderLength += 1;\r\n        }\r\n        // Check for pre photoshop 6 format\r\n        if (nameHeaderLength === 0) {\r\n          // Always 4\r\n          nameHeaderLength = 4;\r\n        }\r\n\r\n        const startOffset = offset + 8 + nameHeaderLength;\r\n        const sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\r\n\r\n        return this.readIPTCData(file, startOffset, sectionLength);\r\n      }\r\n\r\n      // Not the marker, continue searching\r\n      offset++;\r\n    }\r\n  }\r\n\r\n  public readIPTCData(\r\n    file: ArrayBuffer,\r\n    startOffset: number,\r\n    sectionLength: number\r\n  ) {\r\n    const dataView = new DataView(file);\r\n    const data: any = {};\r\n    let fieldValue: any;\r\n    let fieldName: string;\r\n    let dataSize: number;\r\n    let segmentType: any;\r\n    let segmentSize: number;\r\n    let segmentStartPos = startOffset;\r\n    while (segmentStartPos < startOffset + sectionLength) {\r\n      if (\r\n        dataView.getUint8(segmentStartPos) === 0x1c &&\r\n        dataView.getUint8(segmentStartPos + 1) === 0x02\r\n      ) {\r\n        segmentType = dataView.getUint8(segmentStartPos + 2);\r\n        if (segmentType in this.IptcFieldMap) {\r\n          dataSize = dataView.getInt16(segmentStartPos + 3);\r\n          segmentSize = dataSize + 5;\r\n          fieldName = this.IptcFieldMap[segmentType];\r\n          fieldValue = this.getStringFromDB(\r\n            dataView,\r\n            segmentStartPos + 5,\r\n            dataSize\r\n          );\r\n          // Check if we already stored a value with this name\r\n          if (data.hasOwnProperty(fieldName)) {\r\n            // Value already stored with this name, create multivalue field\r\n            if (data[fieldName] instanceof Array) {\r\n              data[fieldName].push(fieldValue);\r\n            } else {\r\n              data[fieldName] = [data[fieldName], fieldValue];\r\n            }\r\n          } else {\r\n            data[fieldName] = fieldValue;\r\n          }\r\n        }\r\n      }\r\n      segmentStartPos++;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  public readTags(\r\n    file: DataView,\r\n    tiffStart: number,\r\n    dirStart: number,\r\n    strings: string[],\r\n    bigEnd: boolean\r\n  ): any {\r\n    const entries: number = file.getUint16(dirStart, !bigEnd);\r\n    const tags: any = {};\r\n    let entryOffset: number;\r\n    let tag: string;\r\n\r\n    for (let i = 0; i < entries; i++) {\r\n      entryOffset = dirStart + i * 12 + 2;\r\n      tag = strings[file.getUint16(entryOffset, !bigEnd)];\r\n      if (!tag) {\r\n        this.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\r\n      }\r\n      tags[tag] = this.readTagValue(\r\n        file,\r\n        entryOffset,\r\n        tiffStart,\r\n        dirStart,\r\n        bigEnd\r\n      );\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  public readTagValue(\r\n    file: any,\r\n    entryOffset: number,\r\n    tiffStart: number,\r\n    dirStart: number,\r\n    bigEnd: boolean\r\n  ): any {\r\n    const type: number = file.getUint16(entryOffset + 2, !bigEnd);\r\n    const numValues = file.getUint32(entryOffset + 4, !bigEnd);\r\n    const valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\r\n    let offset: number;\r\n    let vals: any[];\r\n    let val: any;\r\n    let n: number;\r\n    let numerator: any;\r\n    let denominator: any;\r\n\r\n    switch (type) {\r\n      case 1: // byte, 8-bit unsigned int\r\n      case 7: // undefined, 8-bit byte, value depending on field\r\n        if (numValues === 1) {\r\n          return file.getUint8(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint8(offset + n);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 2: // ascii, 8-bit byte\r\n        offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n        return this.getStringFromDB(file, offset, numValues - 1);\r\n\r\n      case 3: // short, 16 bit int\r\n        if (numValues === 1) {\r\n          return file.getUint16(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          offset = numValues > 2 ? valueOffset : entryOffset + 8;\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 4: // long, 32 bit int\r\n        if (numValues === 1) {\r\n          return file.getUint32(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 5: // rational = two long values, first is numerator, second is denominator\r\n        if (numValues === 1) {\r\n          numerator = file.getUint32(valueOffset, !bigEnd);\r\n          denominator = file.getUint32(valueOffset + 4, !bigEnd);\r\n          val = new Fraction(numerator / denominator);\r\n          val.numerator = numerator;\r\n          val.denominator = denominator;\r\n          return val;\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\r\n            denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\r\n            vals[n] = new Fraction(numerator / denominator);\r\n            vals[n].numerator = numerator;\r\n            vals[n].denominator = denominator;\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 9: // slong, 32 bit signed int\r\n        if (numValues === 1) {\r\n          return file.getInt32(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 10: // signed rational, two slongs, first is numerator, second is denominator\r\n        if (numValues === 1) {\r\n          return (\r\n            file.getInt32(valueOffset, !bigEnd) /\r\n            file.getInt32(valueOffset + 4, !bigEnd)\r\n          );\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] =\r\n              file.getInt32(valueOffset + 8 * n, !bigEnd) /\r\n              file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public getStringFromDB(\r\n    buffer: DataView,\r\n    start: number,\r\n    length: number\r\n  ): string {\r\n    let outstr = '';\r\n    for (let n = start; n < start + length; n++) {\r\n      outstr += String.fromCharCode(buffer.getUint8(n));\r\n    }\r\n    return outstr;\r\n  }\r\n\r\n  public readEXIFData(file: DataView, start: number): any {\r\n    if (this.getStringFromDB(file, start, 4) !== 'Exif') {\r\n      this.log('Not valid EXIF data! ' + this.getStringFromDB(file, start, 4));\r\n\r\n      return false;\r\n    }\r\n\r\n    let bigEnd: boolean;\r\n    let tags: any;\r\n    let tag: string;\r\n    let exifData: any;\r\n    let gpsData: any;\r\n    const tiffOffset: number = start + 6;\r\n\r\n    // test for TIFF validity and endianness\r\n    if (file.getUint16(tiffOffset) === 0x4949) {\r\n      bigEnd = false;\r\n    } else {\r\n      if (file.getUint16(tiffOffset) === 0x4d4d) {\r\n        bigEnd = true;\r\n      } else {\r\n        this.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\r\n      this.log('Not valid TIFF data! (no 0x002A)');\r\n      return false;\r\n    }\r\n\r\n    const firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\r\n\r\n    if (firstIFDOffset < 0x00000008) {\r\n      this.log(\r\n        'Not valid TIFF data! (First offset less than 8)',\r\n        file.getUint32(tiffOffset + 4, !bigEnd)\r\n      );\r\n      return false;\r\n    }\r\n\r\n    tags = this.readTags(\r\n      file,\r\n      tiffOffset,\r\n      tiffOffset + firstIFDOffset,\r\n      this.TiffTags,\r\n      bigEnd\r\n    );\r\n\r\n    if (tags.ExifIFDPointer) {\r\n      exifData = this.readTags(\r\n        file,\r\n        tiffOffset,\r\n        tiffOffset + tags.ExifIFDPointer,\r\n        this.Tags,\r\n        bigEnd\r\n      );\r\n      for (tag in exifData) {\r\n        if ({}.hasOwnProperty.call(exifData, tag)) {\r\n          switch (tag) {\r\n            case 'LightSource':\r\n            case 'Flash':\r\n            case 'MeteringMode':\r\n            case 'ExposureProgram':\r\n            case 'SensingMethod':\r\n            case 'SceneCaptureType':\r\n            case 'SceneType':\r\n            case 'CustomRendered':\r\n            case 'WhiteBalance':\r\n            case 'GainControl':\r\n            case 'Contrast':\r\n            case 'Saturation':\r\n            case 'Sharpness':\r\n            case 'SubjectDistanceRange':\r\n            case 'FileSource':\r\n              exifData[tag] = this.StringValues[tag][exifData[tag]];\r\n              break;\r\n            case 'ExifVersion':\r\n            case 'FlashpixVersion':\r\n              exifData[tag] = String.fromCharCode(\r\n                exifData[tag][0],\r\n                exifData[tag][1],\r\n                exifData[tag][2],\r\n                exifData[tag][3]\r\n              );\r\n              break;\r\n            case 'ComponentsConfiguration':\r\n              const compopents = 'Components';\r\n              exifData[tag] =\r\n                this.StringValues[compopents][exifData[tag][0]] +\r\n                this.StringValues[compopents][exifData[tag][1]] +\r\n                this.StringValues[compopents][exifData[tag][2]] +\r\n                this.StringValues[compopents][exifData[tag][3]];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          tags[tag] = exifData[tag];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (tags.GPSInfoIFDPointer) {\r\n      gpsData = this.readTags(\r\n        file,\r\n        tiffOffset,\r\n        tiffOffset + tags.GPSInfoIFDPointer,\r\n        this.GPSTags,\r\n        bigEnd\r\n      );\r\n      for (tag in gpsData) {\r\n        if ({}.hasOwnProperty.call(gpsData, tag)) {\r\n          switch (tag) {\r\n            case 'GPSVersionID':\r\n              gpsData[tag] =\r\n                gpsData[tag][0] +\r\n                '.' +\r\n                gpsData[tag][1] +\r\n                '.' +\r\n                gpsData[tag][2] +\r\n                '.' +\r\n                gpsData[tag][3];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          tags[tag] = gpsData[tag];\r\n        }\r\n      }\r\n    }\r\n\r\n    return tags;\r\n  }\r\n\r\n  //   get rid of this silly issue\r\n  private checkImageType(img: any) {\r\n    return img instanceof Image || img instanceof HTMLImageElement;\r\n  }\r\n\r\n  public getData(img: IImageExtended | HTMLImageElement, callback: () => void) {\r\n    if (this.checkImageType(img) && !img.complete) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.imageHasData(img as IImageExtended)) {\r\n      this.getImageData(img as IImageExtended, callback);\r\n    } else {\r\n      if (callback) {\r\n        callback.call(img);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getTag(img: any, tag: string) {\r\n    if (!this.imageHasData(img)) {\r\n      return;\r\n    }\r\n    return img.exifdata[tag];\r\n  }\r\n\r\n  public getAllTags(img: any) {\r\n    if (!this.imageHasData(img)) {\r\n      return {};\r\n    }\r\n    let a: string;\r\n    const data: any = img.exifdata;\r\n    const tags: any = {};\r\n    for (a in data) {\r\n      if (data.hasOwnProperty(a)) {\r\n        tags[a] = data[a];\r\n      }\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  public pretty(img: IImageExtended) {\r\n    if (!this.imageHasData(img)) {\r\n      return '';\r\n    }\r\n    let a: any;\r\n    const data: any = img.exifdata;\r\n    let strPretty = '';\r\n    for (a in data) {\r\n      if (data.hasOwnProperty(a)) {\r\n        if (typeof data[a] === 'object') {\r\n          if (data[a] instanceof Number) {\r\n            strPretty += `${a} : ${data[a]} [${data[a].numerator}/${\r\n              data[a].denominator\r\n            }]\\r\\n`;\r\n          } else {\r\n            strPretty += `${a} : [${data[a].length} values]\\r\\n`;\r\n          }\r\n        } else {\r\n          strPretty += `${a} : ${data[a]}\\r\\n`;\r\n        }\r\n      }\r\n    }\r\n    return strPretty;\r\n  }\r\n\r\n  public readFromBinaryFile(file: ArrayBuffer) {\r\n    return this.findEXIFinJPEG(file);\r\n  }\r\n\r\n  public log(...args: any[]) {\r\n    if (this.debug) {\r\n      console.log(args);\r\n    }\r\n  }\r\n}\r\n","export interface IPoint {\r\n  x: number;\r\n  y: number;\r\n  next: Point;\r\n  prev: Point;\r\n}\r\n\r\nexport class Point implements IPoint {\r\n  public x: number;\r\n  public y: number;\r\n\r\n  private myNext: Point;\r\n  private myPrev: Point;\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public get next(): Point {\r\n    return this.myNext;\r\n  }\r\n\r\n  public set next(p: Point) {\r\n    this.myNext = p;\r\n  }\r\n\r\n  public get prev(): Point {\r\n    return this.myPrev;\r\n  }\r\n\r\n  public set prev(p: Point) {\r\n    this.myPrev = p;\r\n  }\r\n}\r\n","import { Point } from './point';\r\n\r\nexport class PointPool {\r\n  private borrowed: number;\r\n  private firstAvailable: Point;\r\n\r\n  constructor(initialSize: number = 1) {\r\n    let prev: Point = (this.firstAvailable = new Point());\r\n\r\n    for (let i = 1; i < initialSize; i++) {\r\n      const p = new Point();\r\n      prev.next = p;\r\n      prev = p;\r\n    }\r\n  }\r\n\r\n  get instance(): PointPool {\r\n    return this;\r\n  }\r\n\r\n  public borrow(x: number, y: number): Point {\r\n    if (this.firstAvailable == null) {\r\n      throw new Error('Pool exhausted');\r\n    }\r\n    this.borrowed++;\r\n    const p: Point = this.firstAvailable;\r\n    this.firstAvailable = p.next;\r\n    p.x = x;\r\n    p.y = y;\r\n    return p;\r\n  }\r\n\r\n  public returnPoint(p: Point) {\r\n    this.borrowed--;\r\n    p.x = 0;\r\n    p.y = 0;\r\n    p.next = this.firstAvailable;\r\n    this.firstAvailable = p;\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { PointPool } from './pointPool';\r\n\r\nexport class Bounds {\r\n  public left: number;\r\n  public right: number;\r\n  public top: number;\r\n  public bottom: number;\r\n\r\n  constructor(x?: number, y?: number, width?: number, height?: number) {\r\n    if (x === void 0) {\r\n      x = 0;\r\n    }\r\n    if (y === void 0) {\r\n      y = 0;\r\n    }\r\n    if (width === void 0) {\r\n      width = 0;\r\n    }\r\n    if (height === void 0) {\r\n      height = 0;\r\n    }\r\n    this.left = x;\r\n    this.right = x + width;\r\n    this.top = y;\r\n    this.bottom = y + height;\r\n  }\r\n\r\n  public get width(): number {\r\n    return this.right - this.left;\r\n  }\r\n\r\n  public get height(): number {\r\n    return this.bottom - this.top;\r\n  }\r\n\r\n  public getCentre(): Point {\r\n    const w = this.width;\r\n    const h = this.height;\r\n    return new PointPool().instance.borrow(this.left + w / 2, this.top + h / 2);\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { CropperSettings } from '../cropper-settings';\r\n\r\nexport interface IHandle {\r\n  over: boolean;\r\n  drag: boolean;\r\n  position: Point;\r\n  offset: Point;\r\n  radius: number;\r\n  cropperSettings: CropperSettings;\r\n  setPosition(x: number, y: number): void;\r\n  setDrag(value: boolean): void;\r\n  draw(ctx: CanvasRenderingContext2D): void;\r\n  setOver(over: boolean): void;\r\n  touchInBounds(x: number, y: number): boolean;\r\n}\r\n\r\nexport class Handle implements IHandle {\r\n  public over: boolean;\r\n  public drag: boolean;\r\n  // tslint:disable-next-line:variable-name\r\n  private _position: Point;\r\n  public offset: Point;\r\n  public radius: number;\r\n\r\n  public cropperSettings: CropperSettings = new CropperSettings();\r\n\r\n  constructor(x: number, y: number, radius: number, settings: CropperSettings) {\r\n    this.over = false;\r\n    this.drag = false;\r\n    this._position = new Point(x, y);\r\n    this.offset = new Point(0, 0);\r\n    this.radius = radius;\r\n    this.cropperSettings = settings;\r\n  }\r\n\r\n  public setDrag(value: boolean): void {\r\n    this.drag = value;\r\n    this.setOver(value);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    // this should't be empty\r\n  }\r\n\r\n  public setOver(over: boolean): void {\r\n    this.over = over;\r\n  }\r\n\r\n  public touchInBounds(x: number, y: number): boolean {\r\n    return (\r\n      x > this.position.x - this.radius + this.offset.x &&\r\n      x < this.position.x + this.radius + this.offset.x &&\r\n      y > this.position.y - this.radius + this.offset.y &&\r\n      y < this.position.y + this.radius + this.offset.y\r\n    );\r\n  }\r\n\r\n  public get position(): Point {\r\n    return this._position;\r\n  }\r\n\r\n  public setPosition(x: number, y: number) {\r\n    this._position.x = x;\r\n    this._position.y = y;\r\n  }\r\n}\r\n","import { Handle, IHandle } from './handle';\r\nimport { CropperSettings } from '../cropper-settings';\r\n\r\nexport interface ICornerMarker extends IHandle {\r\n  horizontalNeighbour: CornerMarker;\r\n  verticalNeighbour: CornerMarker;\r\n}\r\n\r\nexport class CornerMarker extends Handle implements ICornerMarker {\r\n  public horizontalNeighbour: CornerMarker;\r\n  public verticalNeighbour: CornerMarker;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n  }\r\n\r\n  public drawCornerBorder(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.lineJoin = 'miter';\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n    ctx.strokeStyle =\r\n      this.cropperSettings.cropperDrawSettings.strokeColor ||\r\n      'rgba(255,255,255,.7)';\r\n    ctx.stroke();\r\n  }\r\n\r\n  public drawCornerFill(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    if (this.cropperSettings.rounded) {\r\n      const width: number =\r\n        this.position.x - this.horizontalNeighbour.position.x;\r\n      const height: number =\r\n        this.position.y - this.verticalNeighbour.position.y;\r\n\r\n      const offX: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(width / 2)) / 4;\r\n      const offY: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(height / 2)) / 4;\r\n\r\n      this.offset.x = hDirection > 0 ? offX : -offX;\r\n      this.offset.y = vDirection > 0 ? offY : -offY;\r\n    } else {\r\n      this.offset.x = 0;\r\n      this.offset.y = 0;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.fillStyle =\r\n      this.cropperSettings.cropperDrawSettings.fillColor ||\r\n      'rgba(255,255,255,.7)';\r\n    ctx.fill();\r\n  }\r\n\r\n  public moveX(x: number): void {\r\n    this.setPosition(x, this.position.y);\r\n  }\r\n\r\n  public moveY(y: number): void {\r\n    this.setPosition(this.position.x, y);\r\n  }\r\n\r\n  public move(x: number, y: number): void {\r\n    this.setPosition(x, y);\r\n    this.verticalNeighbour.moveX(x);\r\n    this.horizontalNeighbour.moveY(y);\r\n  }\r\n\r\n  public addHorizontalNeighbour(neighbour: CornerMarker): void {\r\n    this.horizontalNeighbour = neighbour;\r\n  }\r\n\r\n  public addVerticalNeighbour(neighbour: CornerMarker): void {\r\n    this.verticalNeighbour = neighbour;\r\n  }\r\n\r\n  public getHorizontalNeighbour(): CornerMarker {\r\n    return this.horizontalNeighbour;\r\n  }\r\n\r\n  public getVerticalNeighbour(): CornerMarker {\r\n    return this.verticalNeighbour;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    this.drawCornerFill(ctx);\r\n    this.drawCornerBorder(ctx);\r\n  }\r\n}\r\n","import { IHandle } from './handle';\r\n\r\nexport class CropTouch {\r\n  public x: number;\r\n  public y: number;\r\n  public id: number;\r\n\r\n  public dragHandle: IHandle;\r\n\r\n  constructor(x: number = 0, y: number = 0, id: number = 0) {\r\n    this.id = id;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Handle } from './handle';\r\nimport { PointPool } from './pointPool';\r\nimport { Point } from './point';\r\nimport { CropperSettings } from '../cropper-settings';\r\nimport { Bounds } from './bounds';\r\n\r\nexport class DragMarker extends Handle {\r\n  private iconPoints: Array<Point>;\r\n  private scaledIconPoints: Array<Point>;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n    this.iconPoints = [];\r\n    this.scaledIconPoints = [];\r\n    this.getDragIconPoints(this.iconPoints, 1);\r\n    this.getDragIconPoints(this.scaledIconPoints, 1.2);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    if (this.over || this.drag) {\r\n      this.drawIcon(ctx, this.scaledIconPoints);\r\n    } else {\r\n      this.drawIcon(ctx, this.iconPoints);\r\n    }\r\n  }\r\n\r\n  public getDragIconPoints(arr: Array<any>, scale: number) {\r\n    const maxLength = 17 * scale;\r\n    const arrowWidth = 14 * scale;\r\n    const arrowLength = 8 * scale;\r\n    const connectorThroat = 4 * scale;\r\n\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        maxLength - arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-arrowWidth / 2, maxLength - arrowLength)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(0, maxLength));\r\n    arr.push(\r\n      new PointPool().instance.borrow(arrowWidth / 2, maxLength - arrowLength)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        connectorThroat / 2,\r\n        maxLength - arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(connectorThroat / 2, connectorThroat / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        maxLength - arrowLength,\r\n        connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(maxLength - arrowLength, arrowWidth / 2)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(maxLength, 0));\r\n    arr.push(\r\n      new PointPool().instance.borrow(maxLength - arrowLength, -arrowWidth / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        maxLength - arrowLength,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(connectorThroat / 2, -connectorThroat / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        connectorThroat / 2,\r\n        -maxLength + arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(arrowWidth / 2, -maxLength + arrowLength)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(0, -maxLength));\r\n    arr.push(\r\n      new PointPool().instance.borrow(-arrowWidth / 2, -maxLength + arrowLength)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        -maxLength + arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -maxLength + arrowLength,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-maxLength + arrowLength, -arrowWidth / 2)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(-maxLength, 0));\r\n    arr.push(\r\n      new PointPool().instance.borrow(-maxLength + arrowLength, arrowWidth / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -maxLength + arrowLength,\r\n        connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-connectorThroat / 2, connectorThroat / 2)\r\n    );\r\n  }\r\n\r\n  public drawIcon(ctx: CanvasRenderingContext2D, points: Array<Point>) {\r\n    if (this.cropperSettings.showCenterMarker) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\r\n      for (const p of points) {\r\n        ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.dragIconFillColor;\r\n      ctx.fill();\r\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.dragIconStrokeWidth;\r\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.dragIconStrokeColor;\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public recalculatePosition(bounds: Bounds) {\r\n    const c = bounds.getCentre();\r\n    this.setPosition(c.x, c.y);\r\n    new PointPool().instance.returnPoint(c);\r\n  }\r\n}\r\n","import { PointPool } from './pointPool';\r\nimport { CornerMarker } from './cornerMarker';\r\nimport { DragMarker } from './dragMarker';\r\nimport { CropTouch } from './cropTouch';\r\n\r\nexport class ImageCropperModel {\r\n  public isMouseDown: boolean;\r\n  protected canvas: HTMLCanvasElement;\r\n  protected x: number;\r\n  protected y: number;\r\n  protected width: number;\r\n  protected height: number;\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected keepAspect: boolean;\r\n  protected touchRadius: number;\r\n  protected currentDragTouches: Array<CropTouch>;\r\n  protected ratioW: number;\r\n  protected ratioH: number;\r\n  protected fileType: string;\r\n  protected imageSet: boolean;\r\n  protected pointPool: PointPool;\r\n  protected buffer: HTMLCanvasElement;\r\n  protected cropCanvas: HTMLCanvasElement;\r\n  protected tl: CornerMarker;\r\n  protected tr: CornerMarker;\r\n  protected bl: CornerMarker;\r\n  protected br: CornerMarker;\r\n  protected markers: Array<CornerMarker>;\r\n  protected center: DragMarker;\r\n  protected ctx: CanvasRenderingContext2D;\r\n  protected aspectRatio: number;\r\n  protected currentlyInteracting: boolean;\r\n  protected srcImage: HTMLImageElement;\r\n  protected vertSquashRatio: number;\r\n  protected minXClamp: number;\r\n  protected minYClamp: number;\r\n  protected maxXClamp: number;\r\n  protected maxYClamp: number;\r\n  protected minHeight: number;\r\n  protected minWidth: number;\r\n  protected cropWidth: number;\r\n  protected cropHeight: number;\r\n  protected croppedImage: HTMLImageElement;\r\n}\r\n","export class ImageCropperDataShare {\r\n  public share: any = {};\r\n  public pressed: HTMLCanvasElement;\r\n  public over: HTMLCanvasElement;\r\n\r\n  public setPressed(canvas: HTMLCanvasElement): void {\r\n    this.pressed = canvas;\r\n  }\r\n\r\n  public setReleased(canvas: HTMLCanvasElement): void {\r\n    if (canvas === this.pressed) {\r\n      //  this.pressed = undefined;\r\n    }\r\n  }\r\n\r\n  public setOver(canvas: HTMLCanvasElement): void {\r\n    this.over = canvas;\r\n  }\r\n\r\n  public setStyle(canvas: HTMLCanvasElement, style: any): void {\r\n    if (this.pressed !== undefined) {\r\n      if (this.pressed === canvas) {\r\n        // TODO: check this\r\n        // angular.element(document.documentElement).css('cursor', style);\r\n      }\r\n    } else {\r\n      if (canvas === this.over) {\r\n        // TODO: check this\r\n        // angular.element(document.documentElement).css('cursor', style);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Bounds } from './model/bounds';\r\nimport { CornerMarker } from './model/cornerMarker';\r\nimport { CropTouch } from './model/cropTouch';\r\nimport { CropperSettings } from './cropper-settings';\r\nimport { DragMarker } from './model/dragMarker';\r\nimport { ImageCropperModel } from './model/imageCropperModel';\r\nimport { ImageCropperDataShare } from './imageCropperDataShare';\r\nimport { PointPool } from './model/pointPool';\r\nimport { Point } from './model/point';\r\nimport { ICornerMarker } from './model/cornerMarker';\r\n\r\nexport class ImageCropper extends ImageCropperModel {\r\n  private crop: ImageCropper;\r\n  private cropperSettings: CropperSettings;\r\n  private previousDistance: number;\r\n  private imageCropperDataShare: ImageCropperDataShare;\r\n\r\n  constructor(cropperSettings: CropperSettings) {\r\n    super();\r\n    this.imageCropperDataShare = new ImageCropperDataShare();\r\n    const x = 0;\r\n    const y = 0;\r\n    const width: number = cropperSettings.width;\r\n    const height: number = cropperSettings.height;\r\n    const keepAspect: boolean = cropperSettings.keepAspect;\r\n    const touchRadius: number = cropperSettings.touchRadius;\r\n    const centerTouchRadius: number = cropperSettings.centerTouchRadius;\r\n    const minWidth: number = cropperSettings.minWidth;\r\n    const minHeight: number = cropperSettings.minHeight;\r\n    const croppedWidth: number = cropperSettings.croppedWidth;\r\n    const croppedHeight: number = cropperSettings.croppedHeight;\r\n\r\n    this.cropperSettings = cropperSettings;\r\n\r\n    this.crop = this;\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.canvasHeight = cropperSettings.canvasHeight;\r\n    this.canvasWidth = cropperSettings.canvasWidth;\r\n\r\n    this.width = width;\r\n    if (width === void 0) {\r\n      this.width = 100;\r\n    }\r\n    this.height = height;\r\n    if (height === void 0) {\r\n      this.height = 50;\r\n    }\r\n    this.keepAspect = keepAspect;\r\n    if (keepAspect === void 0) {\r\n      this.keepAspect = true;\r\n    }\r\n    this.touchRadius = touchRadius;\r\n    if (touchRadius === void 0) {\r\n      this.touchRadius = 20;\r\n    }\r\n    this.minWidth = minWidth;\r\n    this.minHeight = minHeight;\r\n    this.aspectRatio = 0;\r\n    this.currentDragTouches = [];\r\n    this.isMouseDown = false;\r\n    this.ratioW = 1;\r\n    this.ratioH = 1;\r\n    this.fileType = cropperSettings.fileType;\r\n    this.imageSet = false;\r\n    this.pointPool = new PointPool(200);\r\n\r\n    this.tl = new CornerMarker(x, y, touchRadius, this.cropperSettings);\r\n    this.tr = new CornerMarker(x + width, y, touchRadius, this.cropperSettings);\r\n    this.bl = new CornerMarker(\r\n      x,\r\n      y + height,\r\n      touchRadius,\r\n      this.cropperSettings\r\n    );\r\n    this.br = new CornerMarker(\r\n      x + width,\r\n      y + height,\r\n      touchRadius,\r\n      this.cropperSettings\r\n    );\r\n\r\n    this.tl.addHorizontalNeighbour(this.tr);\r\n    this.tl.addVerticalNeighbour(this.bl);\r\n    this.tr.addHorizontalNeighbour(this.tl);\r\n    this.tr.addVerticalNeighbour(this.br);\r\n    this.bl.addHorizontalNeighbour(this.br);\r\n    this.bl.addVerticalNeighbour(this.tl);\r\n    this.br.addHorizontalNeighbour(this.bl);\r\n    this.br.addVerticalNeighbour(this.tr);\r\n    this.markers = [this.tl, this.tr, this.bl, this.br];\r\n\r\n    this.center = new DragMarker(\r\n      x + width / 2,\r\n      y + height / 2,\r\n      centerTouchRadius,\r\n      this.cropperSettings\r\n    );\r\n    this.aspectRatio = height / width;\r\n    this.croppedImage = new Image();\r\n    this.currentlyInteracting = false;\r\n    this.cropWidth = croppedWidth;\r\n    this.cropHeight = croppedHeight;\r\n  }\r\n\r\n  private sign(x: number): number {\r\n    if (+x === x) {\r\n      return x === 0 ? x : x > 0 ? 1 : -1;\r\n    }\r\n    return NaN;\r\n  }\r\n\r\n  private getMousePos(canvas: HTMLCanvasElement, evt: MouseEvent): Point {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return new PointPool().instance.borrow(\r\n      evt.clientX - rect.left,\r\n      evt.clientY - rect.top\r\n    );\r\n  }\r\n\r\n  private getTouchPos(canvas: HTMLCanvasElement, touch: Touch): Point {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return new PointPool().instance.borrow(\r\n      touch.clientX - rect.left,\r\n      touch.clientY - rect.top\r\n    );\r\n  }\r\n\r\n  private detectVerticalSquash(\r\n    img: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\r\n  ) {\r\n    const ih = img.height;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = ih;\r\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    ctx.drawImage(img, 0, 0);\r\n    const imageData: any = ctx.getImageData(0, 0, 1, ih);\r\n    if (imageData) {\r\n      const data = imageData.data;\r\n      // search image edge pixel position in case it is squashed vertically.\r\n      let sy = 0;\r\n      let ey = ih;\r\n      let py = ih;\r\n      while (py > sy) {\r\n        const alpha = data[(py - 1) * 4 + 3];\r\n        if (alpha === 0) {\r\n          ey = py;\r\n        } else {\r\n          sy = py;\r\n        }\r\n        // tslint:disable-next-line:no-bitwise\r\n        py = (ey + sy) >> 1;\r\n      }\r\n      const ratio = py / ih;\r\n      return ratio === 0 ? 1 : ratio;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  private getDataUriMimeType(dataUri: string) {\r\n    // Get a substring because the regex does not perform well on very large strings.\r\n    // Cater for optional charset. Length 50 shoould be enough.\r\n    const dataUriSubstring = dataUri.substring(0, 50);\r\n    let mimeType = 'image/png';\r\n    // data-uri scheme\r\n    // data:[<media type>][;charset=<character set>][;base64],<data>\r\n    const regEx = RegExp(\r\n      /^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi\r\n    );\r\n    const matches = regEx.exec(dataUriSubstring);\r\n    if (matches && matches[2]) {\r\n      mimeType = matches[2];\r\n      if (mimeType === 'image/jpg') {\r\n        mimeType = 'image/jpeg';\r\n      }\r\n    }\r\n    return mimeType;\r\n  }\r\n\r\n  public prepare(canvas: HTMLCanvasElement) {\r\n    this.buffer = document.createElement('canvas');\r\n    this.cropCanvas = document.createElement('canvas');\r\n\r\n    // todo get more reliable parent width value.\r\n    const responsiveWidth: number = canvas.parentElement\r\n      ? canvas.parentElement.clientWidth\r\n      : 0;\r\n    if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\r\n      this.cropCanvas.width = responsiveWidth;\r\n      this.buffer.width = responsiveWidth;\r\n      canvas.width = responsiveWidth;\r\n    } else {\r\n      this.cropCanvas.width = this.cropWidth;\r\n      this.buffer.width = canvas.width;\r\n    }\r\n\r\n    this.cropCanvas.height = this.cropHeight;\r\n    this.buffer.height = canvas.height;\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.draw(this.ctx);\r\n  }\r\n\r\n  public updateSettings(cropperSettings: CropperSettings) {\r\n    this.cropperSettings = cropperSettings;\r\n  }\r\n\r\n  public resizeCanvas(\r\n    width: number,\r\n    height: number,\r\n    setImage: boolean = false\r\n  ): void {\r\n    this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\r\n    this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\r\n    if (setImage) {\r\n      this.setImage(this.srcImage);\r\n    }\r\n  }\r\n\r\n  public reset(): void {\r\n    this.setImage(undefined);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    const bounds: Bounds = this.getBounds();\r\n    if (this.srcImage) {\r\n      ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n      const canvasAspect: number = this.canvasHeight / this.canvasWidth;\r\n      let w: number = this.canvasWidth;\r\n      let h: number = this.canvasHeight;\r\n      if (canvasAspect > sourceAspect) {\r\n        w = this.canvasWidth;\r\n        h = this.canvasWidth * sourceAspect;\r\n      } else {\r\n        h = this.canvasHeight;\r\n        w = this.canvasHeight / sourceAspect;\r\n      }\r\n      this.ratioW = w / this.srcImage.width;\r\n      this.ratioH = h / this.srcImage.height;\r\n      if (canvasAspect < sourceAspect) {\r\n        this.drawImageIOSFix(\r\n          ctx,\r\n          this.srcImage,\r\n          0,\r\n          0,\r\n          this.srcImage.width,\r\n          this.srcImage.height,\r\n          this.buffer.width / 2 - w / 2,\r\n          0,\r\n          w,\r\n          h\r\n        );\r\n      } else {\r\n        this.drawImageIOSFix(\r\n          ctx,\r\n          this.srcImage,\r\n          0,\r\n          0,\r\n          this.srcImage.width,\r\n          this.srcImage.height,\r\n          0,\r\n          this.buffer.height / 2 - h / 2,\r\n          w,\r\n          h\r\n        );\r\n      }\r\n      (this.buffer.getContext('2d') as CanvasRenderingContext2D).drawImage(\r\n        this.canvas,\r\n        0,\r\n        0,\r\n        this.canvasWidth,\r\n        this.canvasHeight\r\n      );\r\n\r\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor;\r\n\r\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.backgroundFillColor;\r\n      if (!this.cropperSettings.rounded) {\r\n        ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n        ctx.drawImage(\r\n          this.buffer,\r\n          bounds.left,\r\n          bounds.top,\r\n          Math.max(bounds.width, 1),\r\n          Math.max(bounds.height, 1),\r\n          bounds.left,\r\n          bounds.top,\r\n          bounds.width,\r\n          bounds.height\r\n        );\r\n        ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\r\n      } else {\r\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          bounds.left + bounds.width / 2,\r\n          bounds.top + bounds.height / 2,\r\n          bounds.width / 2,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        ctx.stroke();\r\n        ctx.clip();\r\n        if (canvasAspect < sourceAspect) {\r\n          this.drawImageIOSFix(\r\n            ctx,\r\n            this.srcImage,\r\n            0,\r\n            0,\r\n            this.srcImage.width,\r\n            this.srcImage.height,\r\n            this.buffer.width / 2 - w / 2,\r\n            0,\r\n            w,\r\n            h\r\n          );\r\n        } else {\r\n          this.drawImageIOSFix(\r\n            ctx,\r\n            this.srcImage,\r\n            0,\r\n            0,\r\n            this.srcImage.width,\r\n            this.srcImage.height,\r\n            0,\r\n            this.buffer.height / 2 - h / 2,\r\n            w,\r\n            h\r\n          );\r\n        }\r\n        ctx.restore();\r\n      }\r\n\r\n      let marker: CornerMarker;\r\n\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        marker = this.markers[i];\r\n        marker.draw(ctx);\r\n      }\r\n      this.center.draw(ctx);\r\n    } else {\r\n      ctx.fillStyle = 'rgba(192,192,192,1)';\r\n      ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n  }\r\n\r\n  public dragCenter(x: number, y: number, marker: DragMarker) {\r\n    const bounds = this.getBounds();\r\n    const left = x - bounds.width / 2;\r\n    const right = x + bounds.width / 2;\r\n    const top = y - bounds.height / 2;\r\n    const bottom = y + bounds.height / 2;\r\n    if (right >= this.maxXClamp) {\r\n      x = this.maxXClamp - bounds.width / 2;\r\n    }\r\n    if (left <= this.minXClamp) {\r\n      x = bounds.width / 2 + this.minXClamp;\r\n    }\r\n    if (top < this.minYClamp) {\r\n      y = bounds.height / 2 + this.minYClamp;\r\n    }\r\n    if (bottom >= this.maxYClamp) {\r\n      y = this.maxYClamp - bounds.height / 2;\r\n    }\r\n    this.tl.moveX(x - bounds.width / 2);\r\n    this.tl.moveY(y - bounds.height / 2);\r\n    this.tr.moveX(x + bounds.width / 2);\r\n    this.tr.moveY(y - bounds.height / 2);\r\n    this.bl.moveX(x - bounds.width / 2);\r\n    this.bl.moveY(y + bounds.height / 2);\r\n    this.br.moveX(x + bounds.width / 2);\r\n    this.br.moveY(y + bounds.height / 2);\r\n    marker.setPosition(x, y);\r\n  }\r\n\r\n  public enforceMinSize(x: number, y: number, marker: CornerMarker) {\r\n    const xLength = x - marker.getHorizontalNeighbour().position.x;\r\n    const yLength = y - marker.getVerticalNeighbour().position.y;\r\n    const xOver = this.minWidth - Math.abs(xLength);\r\n    const yOver = this.minHeight - Math.abs(yLength);\r\n\r\n    if (xLength === 0 || yLength === 0) {\r\n      x = marker.position.x;\r\n      y = marker.position.y;\r\n\r\n      return new PointPool().instance.borrow(x, y);\r\n    }\r\n\r\n    if (this.keepAspect) {\r\n      if (xOver > 0 && yOver / this.aspectRatio > 0) {\r\n        if (xOver > yOver / this.aspectRatio) {\r\n          if (xLength < 0) {\r\n            x -= xOver;\r\n\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          } else {\r\n            x += xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          }\r\n        } else {\r\n          if (yLength < 0) {\r\n            y -= yOver;\r\n\r\n            if (xLength < 0) {\r\n              x -= yOver / this.aspectRatio;\r\n            } else {\r\n              x += yOver / this.aspectRatio;\r\n            }\r\n          } else {\r\n            y += yOver;\r\n            if (xLength < 0) {\r\n              x -= yOver / this.aspectRatio;\r\n            } else {\r\n              x += yOver / this.aspectRatio;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (xOver > 0) {\r\n          if (xLength < 0) {\r\n            x -= xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          } else {\r\n            x += xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          }\r\n        } else {\r\n          if (yOver > 0) {\r\n            if (yLength < 0) {\r\n              y -= yOver;\r\n\r\n              if (xLength < 0) {\r\n                x -= yOver / this.aspectRatio;\r\n              } else {\r\n                x += yOver / this.aspectRatio;\r\n              }\r\n            } else {\r\n              y += yOver;\r\n              if (xLength < 0) {\r\n                x -= yOver / this.aspectRatio;\r\n              } else {\r\n                x += yOver / this.aspectRatio;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (xOver > 0) {\r\n        if (xLength < 0) {\r\n          x -= xOver;\r\n        } else {\r\n          x += xOver;\r\n        }\r\n      }\r\n      if (yOver > 0) {\r\n        if (yLength < 0) {\r\n          y -= yOver;\r\n        } else {\r\n          y += yOver;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      x < this.minXClamp ||\r\n      x > this.maxXClamp ||\r\n      y < this.minYClamp ||\r\n      y > this.maxYClamp\r\n    ) {\r\n      x = marker.position.x;\r\n      y = marker.position.y;\r\n    }\r\n\r\n    return new PointPool().instance.borrow(x, y);\r\n  }\r\n\r\n  public dragCorner(x: number, y: number, marker: CornerMarker) {\r\n    let iX = 0;\r\n    let iY = 0;\r\n    let ax = 0;\r\n    let ay = 0;\r\n    let newHeight = 0;\r\n    let newWidth = 0;\r\n    let newY = 0;\r\n    let newX = 0;\r\n    let anchorMarker: CornerMarker;\r\n    let fold = 0;\r\n\r\n    if (this.keepAspect) {\r\n      anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\r\n      ax = anchorMarker.position.x;\r\n      ay = anchorMarker.position.y;\r\n      if (x <= anchorMarker.position.x) {\r\n        if (y <= anchorMarker.position.y) {\r\n          iX = ax - 100 / this.aspectRatio;\r\n          iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold > 0) {\r\n            newHeight = Math.abs(anchorMarker.position.y - y);\r\n            newWidth = newHeight / this.aspectRatio;\r\n            newY = anchorMarker.position.y - newHeight;\r\n            newX = anchorMarker.position.x - newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold < 0) {\r\n              newWidth = Math.abs(anchorMarker.position.x - x);\r\n              newHeight = newWidth * this.aspectRatio;\r\n              newY = anchorMarker.position.y - newHeight;\r\n              newX = anchorMarker.position.x - newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        } else {\r\n          iX = ax - 100 / this.aspectRatio;\r\n          iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold > 0) {\r\n            newWidth = Math.abs(anchorMarker.position.x - x);\r\n            newHeight = newWidth * this.aspectRatio;\r\n            newY = anchorMarker.position.y + newHeight;\r\n            newX = anchorMarker.position.x - newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold < 0) {\r\n              newHeight = Math.abs(anchorMarker.position.y - y);\r\n              newWidth = newHeight / this.aspectRatio;\r\n              newY = anchorMarker.position.y + newHeight;\r\n              newX = anchorMarker.position.x - newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (y <= anchorMarker.position.y) {\r\n          iX = ax + 100 / this.aspectRatio;\r\n          iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold < 0) {\r\n            newHeight = Math.abs(anchorMarker.position.y - y);\r\n            newWidth = newHeight / this.aspectRatio;\r\n            newY = anchorMarker.position.y - newHeight;\r\n            newX = anchorMarker.position.x + newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold > 0) {\r\n              newWidth = Math.abs(anchorMarker.position.x - x);\r\n              newHeight = newWidth * this.aspectRatio;\r\n              newY = anchorMarker.position.y - newHeight;\r\n              newX = anchorMarker.position.x + newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        } else {\r\n          iX = ax + 100 / this.aspectRatio;\r\n          iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold < 0) {\r\n            newWidth = Math.abs(anchorMarker.position.x - x);\r\n            newHeight = newWidth * this.aspectRatio;\r\n            newY = anchorMarker.position.y + newHeight;\r\n            newX = anchorMarker.position.x + newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold > 0) {\r\n              newHeight = Math.abs(anchorMarker.position.y - y);\r\n              newWidth = newHeight / this.aspectRatio;\r\n              newY = anchorMarker.position.y + newHeight;\r\n              newX = anchorMarker.position.x + newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      const min = this.enforceMinSize(x, y, marker);\r\n      marker.move(min.x, min.y);\r\n      new PointPool().instance.returnPoint(min);\r\n    }\r\n    this.center.recalculatePosition(this.getBounds());\r\n  }\r\n\r\n  public getSide(a: Point, b: Point, c: Point): number {\r\n    const n: number = this.sign(\r\n      (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)\r\n    );\r\n\r\n    // TODO move the return of the pools to outside of this function\r\n    new PointPool().instance.returnPoint(a);\r\n    new PointPool().instance.returnPoint(c);\r\n    return n;\r\n  }\r\n\r\n  public handleRelease(newCropTouch: CropTouch) {\r\n    if (newCropTouch == null) {\r\n      return;\r\n    }\r\n    let index = 0;\r\n    for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n      if (newCropTouch.id === this.currentDragTouches[k].id) {\r\n        this.currentDragTouches[k].dragHandle.setDrag(false);\r\n        index = k;\r\n      }\r\n    }\r\n    this.currentDragTouches.splice(index, 1);\r\n    this.draw(this.ctx);\r\n  }\r\n\r\n  public handleMove(newCropTouch: CropTouch) {\r\n    let matched = false;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n      if (\r\n        newCropTouch.id === this.currentDragTouches[k].id &&\r\n        this.currentDragTouches[k].dragHandle != null\r\n      ) {\r\n        const dragTouch: CropTouch = this.currentDragTouches[k];\r\n        const clampedPositions = this.clampPosition(\r\n          newCropTouch.x - dragTouch.dragHandle.offset.x,\r\n          newCropTouch.y - dragTouch.dragHandle.offset.y\r\n        );\r\n        newCropTouch.x = clampedPositions.x;\r\n        newCropTouch.y = clampedPositions.y;\r\n        new PointPool().instance.returnPoint(clampedPositions);\r\n        if (dragTouch.dragHandle instanceof CornerMarker) {\r\n          this.dragCorner(\r\n            newCropTouch.x,\r\n            newCropTouch.y,\r\n            dragTouch.dragHandle as CornerMarker\r\n          );\r\n        } else {\r\n          this.dragCenter(\r\n            newCropTouch.x,\r\n            newCropTouch.y,\r\n            dragTouch.dragHandle as DragMarker\r\n          );\r\n        }\r\n        this.currentlyInteracting = true;\r\n        matched = true;\r\n        this.imageCropperDataShare.setPressed(this.canvas);\r\n        break;\r\n      }\r\n    }\r\n    if (!matched) {\r\n      for (const marker of this.markers) {\r\n        if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n          newCropTouch.dragHandle = marker;\r\n          this.currentDragTouches.push(newCropTouch);\r\n          marker.setDrag(true);\r\n          newCropTouch.dragHandle.offset.x =\r\n            newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n          newCropTouch.dragHandle.offset.y =\r\n            newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n          this.dragCorner(\r\n            newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n            newCropTouch.y - newCropTouch.dragHandle.offset.y,\r\n            newCropTouch.dragHandle as CornerMarker\r\n          );\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        newCropTouch.dragHandle === null ||\r\n        typeof newCropTouch.dragHandle === 'undefined'\r\n      ) {\r\n        if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n          newCropTouch.dragHandle = this.center;\r\n          this.currentDragTouches.push(newCropTouch);\r\n          newCropTouch.dragHandle.setDrag(true);\r\n          newCropTouch.dragHandle.offset.x =\r\n            newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n          newCropTouch.dragHandle.offset.y =\r\n            newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n          this.dragCenter(\r\n            newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n            newCropTouch.y - newCropTouch.dragHandle.offset.y,\r\n            newCropTouch.dragHandle as DragMarker\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateClampBounds() {\r\n    const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n    const canvasAspect = this.canvas.height / this.canvas.width;\r\n    let w = this.canvas.width;\r\n    let h = this.canvas.height;\r\n    if (canvasAspect > sourceAspect) {\r\n      w = this.canvas.width;\r\n      h = this.canvas.width * sourceAspect;\r\n    } else {\r\n      h = this.canvas.height;\r\n      w = this.canvas.height / sourceAspect;\r\n    }\r\n    this.minXClamp = this.canvas.width / 2 - w / 2;\r\n    this.minYClamp = this.canvas.height / 2 - h / 2;\r\n    this.maxXClamp = this.canvas.width / 2 + w / 2;\r\n    this.maxYClamp = this.canvas.height / 2 + h / 2;\r\n  }\r\n\r\n  public getCropBounds() {\r\n    const bounds = this.getBounds();\r\n    bounds.top = Math.round((bounds.top - this.minYClamp) / this.ratioH);\r\n    bounds.bottom = Math.round((bounds.bottom - this.minYClamp) / this.ratioH);\r\n    bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\r\n    bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\r\n    return bounds;\r\n  }\r\n\r\n  public clampPosition(x: number, y: number) {\r\n    if (x < this.minXClamp) {\r\n      x = this.minXClamp;\r\n    }\r\n    if (x > this.maxXClamp) {\r\n      x = this.maxXClamp;\r\n    }\r\n    if (y < this.minYClamp) {\r\n      y = this.minYClamp;\r\n    }\r\n    if (y > this.maxYClamp) {\r\n      y = this.maxYClamp;\r\n    }\r\n    return new PointPool().instance.borrow(x, y);\r\n  }\r\n\r\n  public isImageSet() {\r\n    return this.imageSet;\r\n  }\r\n\r\n  public setImage(img: any) {\r\n    this.srcImage = img;\r\n    if (!img) {\r\n      this.imageSet = false;\r\n      this.draw(this.ctx);\r\n    } else {\r\n      this.imageSet = true;\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n      const bufferContext = this.buffer.getContext(\r\n        '2d'\r\n      ) as CanvasRenderingContext2D;\r\n      bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\r\n\r\n      if (!this.cropperSettings.fileType) {\r\n        this.fileType = this.getDataUriMimeType(img.src);\r\n      }\r\n\r\n      if (this.cropperSettings.minWithRelativeToResolution) {\r\n        this.minWidth =\r\n          (this.canvas.width * this.cropperSettings.minWidth) /\r\n          this.srcImage.width;\r\n        this.minHeight =\r\n          (this.canvas.height * this.cropperSettings.minHeight) /\r\n          this.srcImage.height;\r\n      }\r\n\r\n      this.updateClampBounds();\r\n      this.canvasWidth = this.canvas.width;\r\n      this.canvasHeight = this.canvas.height;\r\n\r\n      const cropPosition: Point[] = this.getCropPositionFromMarkers();\r\n      this.setCropPosition(cropPosition);\r\n    }\r\n  }\r\n\r\n  public updateCropPosition(cropBounds: Bounds): void {\r\n    const cropPosition: Point[] = this.getCropPositionFromBounds(cropBounds);\r\n    this.setCropPosition(cropPosition);\r\n  }\r\n\r\n  private setCropPosition(cropPosition: Point[]): void {\r\n    this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\r\n    this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\r\n    this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\r\n    this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\r\n    this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\r\n\r\n    for (const position of cropPosition) {\r\n      new PointPool().instance.returnPoint(position);\r\n    }\r\n\r\n    this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\r\n    this.draw(this.ctx);\r\n    this.croppedImage = this.getCroppedImageHelper(\r\n      false,\r\n      this.cropWidth,\r\n      this.cropHeight\r\n    );\r\n  }\r\n\r\n  private getCropPositionFromMarkers(): Point[] {\r\n    const w: number = this.canvas.width;\r\n    const h: number = this.canvas.height;\r\n    let tlPos: Point;\r\n    let trPos: Point;\r\n    let blPos: Point;\r\n    let brPos: Point;\r\n    let center: Point;\r\n    const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n    const cropBounds: Bounds = this.getBounds();\r\n    const cropAspect: number = cropBounds.height / cropBounds.width;\r\n    const cX: number = this.canvas.width / 2;\r\n    const cY: number = this.canvas.height / 2;\r\n\r\n    if (cropAspect > sourceAspect) {\r\n      const imageH = Math.min(w * sourceAspect, h);\r\n      const cropW = imageH / cropAspect;\r\n      tlPos = new PointPool().instance.borrow(cX - cropW / 2, cY + imageH / 2);\r\n      trPos = new PointPool().instance.borrow(cX + cropW / 2, cY + imageH / 2);\r\n      blPos = new PointPool().instance.borrow(cX - cropW / 2, cY - imageH / 2);\r\n      brPos = new PointPool().instance.borrow(cX + cropW / 2, cY - imageH / 2);\r\n    } else {\r\n      const imageW = Math.min(h / sourceAspect, w);\r\n      const cropH = imageW * cropAspect;\r\n      tlPos = new PointPool().instance.borrow(cX - imageW / 2, cY + cropH / 2);\r\n      trPos = new PointPool().instance.borrow(cX + imageW / 2, cY + cropH / 2);\r\n      blPos = new PointPool().instance.borrow(cX - imageW / 2, cY - cropH / 2);\r\n      brPos = new PointPool().instance.borrow(cX + imageW / 2, cY - cropH / 2);\r\n    }\r\n\r\n    center = new PointPool().instance.borrow(cX, cY);\r\n    const positions: Point[] = [tlPos, trPos, blPos, brPos, center];\r\n    return positions;\r\n  }\r\n\r\n  private getCropPositionFromBounds(cropPosition: Bounds): Point[] {\r\n    let marginTop = 0;\r\n    let marginLeft = 0;\r\n    const canvasAspect: number = this.canvasHeight / this.canvasWidth;\r\n    const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n\r\n    if (canvasAspect > sourceAspect) {\r\n      marginTop =\r\n        this.buffer.height / 2 - (this.canvasWidth * sourceAspect) / 2;\r\n    } else {\r\n      marginLeft = this.buffer.width / 2 - this.canvasHeight / sourceAspect / 2;\r\n    }\r\n\r\n    const ratioW: number =\r\n      (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\r\n    const ratioH: number =\r\n      (this.canvasHeight - marginTop * 2) / this.srcImage.height;\r\n\r\n    let actualH: number = cropPosition.height * ratioH;\r\n    let actualW: number = cropPosition.width * ratioW;\r\n    const actualX: number = cropPosition.left * ratioW + marginLeft;\r\n    const actualY: number = cropPosition.top * ratioH + marginTop;\r\n\r\n    if (this.keepAspect) {\r\n      const scaledW: number = actualH / this.aspectRatio;\r\n      const scaledH: number = actualW * this.aspectRatio;\r\n\r\n      if (this.getCropBounds().height === cropPosition.height) {\r\n        // only width changed\r\n        actualH = scaledH;\r\n      } else if (this.getCropBounds().width === cropPosition.width) {\r\n        // only height changed\r\n        actualW = scaledW;\r\n      } else {\r\n        // height and width changed\r\n        if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\r\n          actualW = scaledW;\r\n        } else {\r\n          actualH = scaledH;\r\n        }\r\n      }\r\n    }\r\n\r\n    const tlPos: Point = new PointPool().instance.borrow(\r\n      actualX,\r\n      actualY + actualH\r\n    );\r\n    const trPos: Point = new PointPool().instance.borrow(\r\n      actualX + actualW,\r\n      actualY + actualH\r\n    );\r\n    const blPos: Point = new PointPool().instance.borrow(actualX, actualY);\r\n    const brPos: Point = new PointPool().instance.borrow(\r\n      actualX + actualW,\r\n      actualY\r\n    );\r\n    const center: Point = new PointPool().instance.borrow(\r\n      actualX + actualW / 2,\r\n      actualY + actualH / 2\r\n    );\r\n\r\n    const positions: Point[] = [tlPos, trPos, blPos, brPos, center];\r\n    return positions;\r\n  }\r\n\r\n  public getCroppedImageHelper(\r\n    preserveSize?: boolean,\r\n    fillWidth?: number,\r\n    fillHeight?: number\r\n  ): HTMLImageElement {\r\n    if (this.cropperSettings.cropOnResize) {\r\n      return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\r\n    }\r\n    return this.croppedImage\r\n      ? this.croppedImage\r\n      : document.createElement('img');\r\n  }\r\n\r\n  // todo: Unused parameters?\r\n  public getCroppedImage(\r\n    preserveSize?: boolean,\r\n    fillWidth?: number,\r\n    fillHeight?: number\r\n  ): HTMLImageElement {\r\n    const bounds: Bounds = this.getBounds();\r\n    if (!this.srcImage) {\r\n      return document.createElement('img');\r\n    } else {\r\n      const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n      const canvasAspect: number = this.canvas.height / this.canvas.width;\r\n      let w: number = this.canvas.width;\r\n      let h: number = this.canvas.height;\r\n      if (canvasAspect > sourceAspect) {\r\n        w = this.canvas.width;\r\n        h = this.canvas.width * sourceAspect;\r\n      } else {\r\n        if (canvasAspect < sourceAspect) {\r\n          h = this.canvas.height;\r\n          w = this.canvas.height / sourceAspect;\r\n        } else {\r\n          h = this.canvas.height;\r\n          w = this.canvas.width;\r\n        }\r\n      }\r\n      this.ratioW = w / this.srcImage.width;\r\n      this.ratioH = h / this.srcImage.height;\r\n      const offsetH: number = (this.buffer.height - h) / 2 / this.ratioH;\r\n      const offsetW: number = (this.buffer.width - w) / 2 / this.ratioW;\r\n\r\n      const ctx = this.cropCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n      if (this.cropperSettings.preserveSize || preserveSize) {\r\n        const width = Math.round(\r\n          bounds.right / this.ratioW - bounds.left / this.ratioW\r\n        );\r\n        const height = Math.round(\r\n          bounds.bottom / this.ratioH - bounds.top / this.ratioH\r\n        );\r\n\r\n        this.cropCanvas.width = width;\r\n        this.cropCanvas.height = height;\r\n\r\n        this.cropperSettings.croppedWidth = this.cropCanvas.width;\r\n        this.cropperSettings.croppedHeight = this.cropCanvas.height;\r\n      } else {\r\n        this.cropCanvas.width = this.cropWidth;\r\n        this.cropCanvas.height = this.cropHeight;\r\n      }\r\n\r\n      ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\r\n      this.drawImageIOSFix(\r\n        ctx,\r\n        this.srcImage,\r\n        Math.max(Math.round(bounds.left / this.ratioW - offsetW), 0),\r\n        Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0),\r\n        Math.max(Math.round(bounds.width / this.ratioW), 1),\r\n        Math.max(Math.round(bounds.height / this.ratioH), 1),\r\n        0,\r\n        0,\r\n        this.cropCanvas.width,\r\n        this.cropCanvas.height\r\n      );\r\n\r\n      if (this.cropperSettings.resampleFn) {\r\n        this.cropperSettings.resampleFn(this.cropCanvas);\r\n      }\r\n\r\n      this.croppedImage.width = this.cropCanvas.width;\r\n      this.croppedImage.height = this.cropCanvas.height;\r\n      this.croppedImage.src = this.cropCanvas.toDataURL(\r\n        this.fileType,\r\n        this.cropperSettings.compressRatio\r\n      );\r\n      return this.croppedImage;\r\n    }\r\n  }\r\n\r\n  public getBounds(): Bounds {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    for (const marker of this.markers) {\r\n      if (marker.position.x < minX) {\r\n        minX = marker.position.x;\r\n      }\r\n      if (marker.position.x > maxX) {\r\n        maxX = marker.position.x;\r\n      }\r\n      if (marker.position.y < minY) {\r\n        minY = marker.position.y;\r\n      }\r\n      if (marker.position.y > maxY) {\r\n        maxY = marker.position.y;\r\n      }\r\n    }\r\n    const bounds: Bounds = new Bounds();\r\n    bounds.left = minX;\r\n    bounds.right = maxX;\r\n    bounds.top = minY;\r\n    bounds.bottom = maxY;\r\n    return bounds;\r\n  }\r\n\r\n  public setBounds(bounds: any) {\r\n    // const topLeft: CornerMarker;\r\n    // const topRight: CornerMarker;\r\n    // const bottomLeft: CornerMarker;\r\n    // const bottomRight: CornerMarker;\r\n\r\n    const currentBounds = this.getBounds();\r\n    for (const marker of this.markers) {\r\n      if (marker.position.x === currentBounds.left) {\r\n        if (marker.position.y === currentBounds.top) {\r\n          marker.setPosition(bounds.left, bounds.top);\r\n        } else {\r\n          marker.setPosition(bounds.left, bounds.bottom);\r\n        }\r\n      } else {\r\n        if (marker.position.y === currentBounds.top) {\r\n          marker.setPosition(bounds.right, bounds.top);\r\n        } else {\r\n          marker.setPosition(bounds.right, bounds.bottom);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.center.recalculatePosition(bounds);\r\n    this.center.draw(this.ctx);\r\n    this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\r\n  }\r\n\r\n  public onTouchMove(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      if (event.touches.length === 1) {\r\n        if (this.isMouseDown) {\r\n          event.preventDefault();\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 0; i < event.touches.length; i++) {\r\n            const touch = event.touches[i];\r\n            const touchPosition = this.getTouchPos(this.canvas, touch);\r\n            const cropTouch = new CropTouch(\r\n              touchPosition.x,\r\n              touchPosition.y,\r\n              touch.identifier\r\n            );\r\n            new PointPool().instance.returnPoint(touchPosition);\r\n            this.move(cropTouch);\r\n          }\r\n        }\r\n      } else {\r\n        if (event.touches.length === 2) {\r\n          event.preventDefault();\r\n\r\n          const distance =\r\n            (event.touches[0].clientX - event.touches[1].clientX) *\r\n              (event.touches[0].clientX - event.touches[1].clientX) +\r\n            (event.touches[0].clientY - event.touches[1].clientY) *\r\n              (event.touches[0].clientY - event.touches[1].clientY);\r\n          if (this.previousDistance && this.previousDistance !== distance) {\r\n            const bounds = this.getBounds();\r\n\r\n            if (distance < this.previousDistance) {\r\n              bounds.top += 1;\r\n              bounds.left += 1;\r\n              bounds.right -= 1;\r\n              bounds.bottom -= 1;\r\n            }\r\n\r\n            if (distance > this.previousDistance) {\r\n              if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // none\r\n                bounds.top -= 1;\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // left\r\n                bounds.top -= 1;\r\n                bounds.right += 2;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // right\r\n                bounds.top -= 1;\r\n                bounds.left -= 2;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // top\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // bottom\r\n                bounds.top -= 2;\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // top left\r\n                bounds.right += 2;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // top right\r\n                bounds.left -= 2;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // bottom left\r\n                bounds.top -= 2;\r\n                bounds.right += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // bottom right\r\n                bounds.top -= 2;\r\n                bounds.left -= 2;\r\n              }\r\n            }\r\n\r\n            if (bounds.top < this.minYClamp) {\r\n              bounds.top = this.minYClamp;\r\n            }\r\n            if (bounds.bottom > this.maxYClamp) {\r\n              bounds.bottom = this.maxYClamp;\r\n            }\r\n            if (bounds.left < this.minXClamp) {\r\n              bounds.left = this.minXClamp;\r\n            }\r\n            if (bounds.right > this.maxXClamp) {\r\n              bounds.right = this.maxXClamp;\r\n            }\r\n\r\n            this.setBounds(bounds);\r\n          }\r\n          this.previousDistance = distance;\r\n        }\r\n      }\r\n      this.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  public onMouseMove(e: MouseEvent) {\r\n    if (this.crop.isImageSet() && this.isMouseDown) {\r\n      const mousePosition = this.getMousePos(this.canvas, e);\r\n      this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\r\n      let dragTouch = this.getDragTouchForID(0);\r\n      if (dragTouch) {\r\n        dragTouch.x = mousePosition.x;\r\n        dragTouch.y = mousePosition.y;\r\n      } else {\r\n        dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\r\n      }\r\n      new PointPool().instance.returnPoint(mousePosition);\r\n      this.drawCursors(dragTouch);\r\n      this.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  public move(cropTouch: CropTouch) {\r\n    if (this.isMouseDown) {\r\n      this.handleMove(cropTouch);\r\n    }\r\n  }\r\n\r\n  public getDragTouchForID(id: any): CropTouch | undefined {\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.currentDragTouches.length; i++) {\r\n      if (id === this.currentDragTouches[i].id) {\r\n        return this.currentDragTouches[i];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public drawCursors(cropTouch: CropTouch) {\r\n    let cursorDrawn = false;\r\n    if (cropTouch != null) {\r\n      if (cropTouch.dragHandle === this.center) {\r\n        this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n        cursorDrawn = true;\r\n      }\r\n      if (\r\n        cropTouch.dragHandle !== null &&\r\n        cropTouch.dragHandle instanceof CornerMarker\r\n      ) {\r\n        this.drawCornerCursor(\r\n          cropTouch.dragHandle,\r\n          cropTouch.dragHandle.position.x,\r\n          cropTouch.dragHandle.position.y\r\n        );\r\n        cursorDrawn = true;\r\n      }\r\n    }\r\n    let didDraw = false;\r\n    if (!cursorDrawn) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        didDraw =\r\n          didDraw ||\r\n          this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\r\n      }\r\n      if (!didDraw) {\r\n        this.imageCropperDataShare.setStyle(this.canvas, 'initial');\r\n      }\r\n    }\r\n    if (\r\n      !didDraw &&\r\n      !cursorDrawn &&\r\n      this.center.touchInBounds(cropTouch.x, cropTouch.y)\r\n    ) {\r\n      this.center.setOver(true);\r\n      this.imageCropperDataShare.setOver(this.canvas);\r\n      this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n    } else {\r\n      this.center.setOver(false);\r\n    }\r\n  }\r\n\r\n  public drawCornerCursor(marker: any, x: number, y: number) {\r\n    if (marker.touchInBounds(x, y)) {\r\n      marker.setOver(true);\r\n      if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\r\n        if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n        } else {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n        }\r\n      } else {\r\n        if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n        } else {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    marker.setOver(false);\r\n    return false;\r\n  }\r\n\r\n  public onTouchStart(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      const touch = event.touches[0];\r\n      const touchPosition = this.getTouchPos(this.canvas, touch);\r\n      const cropTouch = new CropTouch(\r\n        touchPosition.x,\r\n        touchPosition.y,\r\n        touch.identifier\r\n      );\r\n      new PointPool().instance.returnPoint(touchPosition);\r\n\r\n      this.isMouseDown = false;\r\n      for (const marker of this.markers) {\r\n        if (marker.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n          this.isMouseDown = true;\r\n        }\r\n      }\r\n      if (this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n        this.isMouseDown = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onTouchEnd(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < event.changedTouches.length; i++) {\r\n        const touch = event.changedTouches[i];\r\n        const dragTouch = this.getDragTouchForID(touch.identifier);\r\n        if (dragTouch && dragTouch !== undefined) {\r\n          if (\r\n            dragTouch.dragHandle instanceof CornerMarker ||\r\n            dragTouch.dragHandle instanceof DragMarker\r\n          ) {\r\n            dragTouch.dragHandle.setOver(false);\r\n          }\r\n          this.handleRelease(dragTouch);\r\n        }\r\n      }\r\n\r\n      if (this.currentDragTouches.length === 0) {\r\n        this.isMouseDown = false;\r\n        this.currentlyInteracting = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\r\n  public drawImageIOSFix(\r\n    ctx: CanvasRenderingContext2D,\r\n    img: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement,\r\n    sx: number,\r\n    sy: number,\r\n    sw: number,\r\n    sh: number,\r\n    dx: number,\r\n    dy: number,\r\n    dw: number,\r\n    dh: number\r\n  ) {\r\n    // Works only if whole image is displayed:\r\n    // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\r\n    // The following works correct also when only a part of the image is displayed:\r\n    // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\r\n    // this.vertSquashRatio, dx, dy, dw, dh);\r\n    ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n  }\r\n\r\n  public onMouseDown(event: MouseEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      this.isMouseDown = true;\r\n    }\r\n  }\r\n\r\n  public onMouseUp(event: MouseEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      this.imageCropperDataShare.setReleased(this.canvas);\r\n      this.isMouseDown = false;\r\n      this.handleRelease(new CropTouch(0, 0, 0));\r\n    }\r\n  }\r\n}\r\n","import { Bounds } from './bounds';\r\n\r\nexport class CropPosition {\r\n  public x: number;\r\n  public y: number;\r\n  public w: number;\r\n  public h: number;\r\n\r\n  constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n    this.x = +x;\r\n    this.y = +y;\r\n    this.w = +w;\r\n    this.h = +h;\r\n  }\r\n\r\n  public toBounds(): Bounds {\r\n    return new Bounds(this.x, this.y, this.w, this.h);\r\n  }\r\n\r\n  public isInitialized(): boolean {\r\n    return this.x !== 0 && this.y !== 0 && this.w !== 0 && this.h !== 0;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  AfterViewInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Renderer2,\r\n  SimpleChanges, Inject\r\n} from '@angular/core';\r\nimport { CropperSettings } from './cropper-settings';\r\nimport { ImageCropper } from './imageCropper';\r\nimport { CropPosition } from './model/cropPosition';\r\nimport { Bounds } from './model/bounds';\r\nimport { Exif } from './exif';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'img-cropper',\r\n  templateUrl: './image-cropper.component.html'\r\n})\r\nexport class ImageCropperComponent\r\n  implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('cropcanvas', { static: true })\r\n  cropcanvas: ElementRef;\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n  @Input() public settings: CropperSettings;\r\n  @Input() public image: any;\r\n  @Input() public inputImage: any;\r\n  @Input() public cropper: ImageCropper;\r\n  @Input() public cropPosition: CropPosition;\r\n  @Output()\r\n  public cropPositionChange: EventEmitter<CropPosition> = new EventEmitter<\r\n    CropPosition\r\n  >();\r\n\r\n  private exif = new Exif();\r\n\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() public onCrop: EventEmitter<any> = new EventEmitter();\r\n  @Output() imageSet: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  public croppedWidth: number;\r\n  public croppedHeight: number;\r\n  public intervalRef: number;\r\n  public raf: number;\r\n  public renderer: Renderer2;\r\n  public windowListener: EventListenerObject;\r\n\r\n  private isCropPositionUpdateNeeded: boolean;\r\n  private dragUnsubscribers: (() => void)[] = [];\r\n\r\n  constructor(renderer: Renderer2,\r\n              @Inject(DOCUMENT) private document) {\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n\r\n    if (!this.settings) {\r\n      this.settings = new CropperSettings();\r\n    }\r\n\r\n    if (this.settings.cropperClass) {\r\n      this.renderer.setAttribute(canvas, 'class', this.settings.cropperClass);\r\n    }\r\n\r\n    if (!this.settings.dynamicSizing) {\r\n      this.renderer.setAttribute(\r\n        canvas,\r\n        'width',\r\n        this.settings.canvasWidth.toString()\r\n      );\r\n      this.renderer.setAttribute(\r\n        canvas,\r\n        'height',\r\n        this.settings.canvasHeight.toString()\r\n      );\r\n    } else {\r\n      this.windowListener = this.resize.bind(this);\r\n      window.addEventListener('resize', this.windowListener);\r\n    }\r\n\r\n    if (!this.cropper) {\r\n      this.cropper = new ImageCropper(this.settings);\r\n    }\r\n\r\n    this.cropper.prepare(canvas);\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.isCropPositionChanged(changes)) {\r\n      this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n      if (this.cropper.isImageSet()) {\r\n        const bounds = this.cropper.getCropBounds();\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n        this.onCrop.emit(bounds);\r\n      }\r\n      this.updateCropBounds();\r\n    }\r\n\r\n    if (changes.inputImage) {\r\n      this.setImage(changes.inputImage.currentValue);\r\n    }\r\n\r\n    if (changes.settings && this.cropper) {\r\n      this.cropper.updateSettings(this.settings);\r\n      if (this.cropper.isImageSet()) {\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n        this.onCrop.emit(this.cropper.getCropBounds());\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.removeDragListeners();\r\n    if (this.settings.dynamicSizing && this.windowListener) {\r\n      window.removeEventListener('resize', this.windowListener);\r\n    }\r\n  }\r\n\r\n  public onTouchMove(event: TouchEvent): void {\r\n    this.cropper.onTouchMove(event);\r\n  }\r\n\r\n  public onTouchStart(event: TouchEvent): void {\r\n    this.cropper.onTouchStart(event);\r\n  }\r\n\r\n  public onTouchEnd(event: TouchEvent): void {\r\n    this.cropper.onTouchEnd(event);\r\n    if (this.cropper.isImageSet()) {\r\n      this.image.image = this.cropper.getCroppedImageHelper().src;\r\n      this.onCrop.emit(this.cropper.getCropBounds());\r\n      this.updateCropBounds();\r\n    }\r\n  }\r\n\r\n  public onMouseDown(event: MouseEvent): void {\r\n    this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mousemove', this.onMouseMove.bind(this)));\r\n    this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mouseup', this.onMouseUp.bind(this)));\r\n\r\n    this.cropper.onMouseDown(event);\r\n    // if (!this.cropper.isImageSet() && !this.settings.noFileInput) {\r\n    //   // load img\r\n    //   this.fileInput.nativeElement.click();\r\n    // }\r\n  }\r\n\r\n  private removeDragListeners() {\r\n    this.dragUnsubscribers.forEach(unsubscribe => unsubscribe());\r\n  }\r\n\r\n  public onMouseUp(event: MouseEvent): void {\r\n    this.removeDragListeners();\r\n    if (this.cropper.isImageSet()) {\r\n      this.cropper.onMouseUp(event);\r\n      this.image.image = this.cropper.getCroppedImageHelper().src;\r\n      this.onCrop.emit(this.cropper.getCropBounds());\r\n      this.updateCropBounds();\r\n    }\r\n  }\r\n\r\n  public onMouseMove(event: MouseEvent): void {\r\n    this.cropper.onMouseMove(event);\r\n  }\r\n\r\n  public fileChangeListener($event: any) {\r\n    if ($event.target.files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const file: File = $event.target.files[0];\r\n    if (this.settings.allowedFilesRegex.test(file.name)) {\r\n      const image: any = new Image();\r\n      const fileReader: FileReader = new FileReader();\r\n\r\n      fileReader.addEventListener('loadend', (loadEvent: any) => {\r\n        image.addEventListener('load', () => {\r\n          this.setImage(image);\r\n        });\r\n        image.src = loadEvent.target.result;\r\n      });\r\n\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  private resize() {\r\n    const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n    this.settings.canvasWidth = canvas.offsetWidth;\r\n    this.settings.canvasHeight = canvas.offsetHeight;\r\n    this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.cropper.reset();\r\n    this.renderer.setAttribute(\r\n      this.cropcanvas.nativeElement,\r\n      'class',\r\n      this.settings.cropperClass\r\n    );\r\n    this.image.image = this.cropper.getCroppedImageHelper().src;\r\n  }\r\n\r\n  public setImage(image: HTMLImageElement, newBounds: any = null) {\r\n    this.imageSet.emit(true);\r\n    this.renderer.setAttribute(\r\n      this.cropcanvas.nativeElement,\r\n      'class',\r\n      `${this.settings.cropperClass} ${this.settings.croppingClass}`\r\n    );\r\n    this.raf = window.requestAnimationFrame(() => {\r\n      if (this.raf) {\r\n        window.cancelAnimationFrame(this.raf);\r\n      }\r\n      if (image.naturalHeight > 0 && image.naturalWidth > 0) {\r\n        image.height = image.naturalHeight;\r\n        image.width = image.naturalWidth;\r\n\r\n        window.cancelAnimationFrame(this.raf);\r\n        this.getOrientedImage(image, (img: HTMLImageElement) => {\r\n          if (this.settings.dynamicSizing) {\r\n            const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n            this.settings.canvasWidth = canvas.offsetWidth;\r\n            this.settings.canvasHeight = canvas.offsetHeight;\r\n            this.cropper.resizeCanvas(\r\n              canvas.offsetWidth,\r\n              canvas.offsetHeight,\r\n              false\r\n            );\r\n          }\r\n\r\n          this.cropper.setImage(img);\r\n          if (this.cropPosition && this.cropPosition.isInitialized()) {\r\n            this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n          }\r\n\r\n          this.image.original = img;\r\n          let bounds = this.cropper.getCropBounds();\r\n          this.image.image = this.cropper.getCroppedImageHelper().src;\r\n\r\n          if (!this.image) {\r\n            this.image = image;\r\n          }\r\n\r\n          if (newBounds != null) {\r\n            bounds = newBounds;\r\n            this.cropper.setBounds(bounds);\r\n            this.cropper.updateCropPosition(bounds);\r\n          }\r\n          this.onCrop.emit(bounds);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private isCropPositionChanged(changes: SimpleChanges): boolean {\r\n    if (\r\n      this.cropper &&\r\n      changes.cropPosition &&\r\n      this.isCropPositionUpdateNeeded\r\n    ) {\r\n      return true;\r\n    } else {\r\n      this.isCropPositionUpdateNeeded = true;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private updateCropBounds(): void {\r\n    const cropBound: Bounds = this.cropper.getCropBounds();\r\n    this.cropPositionChange.emit(\r\n      new CropPosition(\r\n        cropBound.left,\r\n        cropBound.top,\r\n        cropBound.width,\r\n        cropBound.height\r\n      )\r\n    );\r\n    this.isCropPositionUpdateNeeded = false;\r\n  }\r\n\r\n  private getOrientedImage(\r\n    image: HTMLImageElement,\r\n    callback: (img: HTMLImageElement) => void\r\n  ) {\r\n    let img: any;\r\n\r\n    this.exif.getData(image, () => {\r\n      const orientation = this.exif.getTag(image, 'Orientation');\r\n\r\n      if ([3, 6, 8].indexOf(orientation) > -1) {\r\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n        const ctx: CanvasRenderingContext2D = canvas.getContext(\r\n          '2d'\r\n        ) as CanvasRenderingContext2D;\r\n        let cw: number = image.width;\r\n        let ch: number = image.height;\r\n        let cx = 0;\r\n        let cy = 0;\r\n        let deg = 0;\r\n\r\n        switch (orientation) {\r\n          case 3:\r\n            cx = -image.width;\r\n            cy = -image.height;\r\n            deg = 180;\r\n            break;\r\n          case 6:\r\n            cw = image.height;\r\n            ch = image.width;\r\n            cy = -image.height;\r\n            deg = 90;\r\n            break;\r\n          case 8:\r\n            cw = image.height;\r\n            ch = image.width;\r\n            cx = -image.width;\r\n            deg = 270;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        canvas.width = cw;\r\n        canvas.height = ch;\r\n        ctx.rotate((deg * Math.PI) / 180);\r\n        ctx.drawImage(image, cx, cy);\r\n        img = document.createElement('img');\r\n        img.width = cw;\r\n        img.height = ch;\r\n        img.addEventListener('load', () => {\r\n          callback(img);\r\n        });\r\n        img.src = canvas.toDataURL('image/png');\r\n      } else {\r\n        img = image;\r\n        callback(img);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ImageCropperComponent } from './image-cropper.component';\r\n\r\n@NgModule({\r\n  declarations: [ImageCropperComponent],\r\n  exports: [ImageCropperComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class ImageCropperModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageCropperService {\r\n  constructor() {}\r\n}\r\n","// looks like this CropService is never used\r\nexport class CropService {\r\n  public canvas: HTMLCanvasElement;\r\n  public ctx: CanvasRenderingContext2D;\r\n\r\n  public init(canvas: HTMLCanvasElement) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  }\r\n}\r\n"]}